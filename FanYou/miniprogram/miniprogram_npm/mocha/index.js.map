{"version":3,"sources":["index.js","lib/mocha.js","lib/reporters/index.js","lib/reporters/base.js","lib/ms.js","lib/utils.js","lib/reporters/dot.js","lib/reporters/doc.js","lib/reporters/tap.js","lib/reporters/json.js","lib/reporters/html.js","lib/browser/progress.js","lib/reporters/list.js","lib/reporters/min.js","lib/reporters/spec.js","lib/reporters/nyan.js","lib/reporters/xunit.js","lib/reporters/markdown.js","lib/reporters/progress.js","lib/reporters/landing.js","lib/reporters/json-stream.js","lib/interfaces/index.js","lib/interfaces/bdd.js","lib/test.js","lib/runnable.js","lib/pending.js","lib/interfaces/common.js","lib/suite.js","lib/hook.js","lib/interfaces/tdd.js","lib/interfaces/qunit.js","lib/interfaces/exports.js","lib/context.js","lib/runner.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA,AGTA;AJaA,AGTA,ADGA,ADGA,AGTA;AJaA,AGTA,ADGA,ADGA,AGTA;AJaA,AGTA,ADGA,AGTA,AJYA,AGTA;AJaA,AGTA,ADGA,AGTA,AJYA,AGTA;AJaA,AGTA,ADGA,AGTA,AJYA,AGTA;AJaA,AGTA,ADGA,AIZA,ADGA,AJYA,AGTA;AJaA,AGTA,ADGA,AIZA,ADGA,AJYA,AGTA;AJaA,AGTA,ADGA,AIZA,ADGA,AJYA,AGTA;AJaA,AGTA,ADGA,AIZA,ADGA,AJYA,AMlBA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AJYA,AMlBA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AENA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AGTA,ADGA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AGTA,ADGA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AGTA,ADGA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,ADGA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,ADGA,AHSA;AJaA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,ADGA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,ADGA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,ADGA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,ADGA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AJYA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AJYA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AJYA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,ALeA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,ALeA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,ALeA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,ACHA,ANkBA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,ACHA,ANkBA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,ACHA,ANkBA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,AENA,ADGA,ANkBA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,AENA,ADGA,ANkBA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,AENA,ADGA,ANkBA,AHSA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,AENA,ADGA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,AENA,ADGA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,ACHA,AENA,ADGA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AKfA,AJYA,AENA,ADGA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AKfA,AJYA,AENA,ADGA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AKfA,AJYA,AENA,ADGA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AGTA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,ADGA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AV8BA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AU9BA,ApB4DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AU9BA,ApB4DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AU9BA,ApB4DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AWjCA,ADGA,ApB4DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AWjCA,ADGA,ApB4DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AWjCA,ADGA,ApB4DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AXiCA;AMjBA,AWjCA,ADGA,ApB4DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AOrBA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AOrBA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AOrBA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,ADGA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,ArB+DA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AJYA,AENA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,ADGA,AlBsDA;AMjBA,AWjCA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AWjCA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AWjCA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AIZA,ADGA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AzB2EA,AGTA,AqB/DA,AtBkEA,AGTA,AIZA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AGTA,A5BoFA,AGTA,AqB/DA,AtBkEA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AGTA,A5BoFA,AGTA,AqB/DA,AtBkEA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AGTA,A5BoFA,AGTA,AqB/DA,AtBkEA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AIZA,ADGA,A5BoFA,AGTA,AqB/DA,AtBkEA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AIZA,ADGA,A5BoFA,AGTA,AqB/DA,AtBkEA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AIZA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,ANkBA,AQxBA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AiBnDA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,AENA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,AENA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,AENA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,AENA,AQxBA,AGTA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,APqBA,AKfA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AGTA,ADGA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,AXiCA,AU9BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AJYA,AlBsDA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,ADGA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,ADGA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AU9BA,ADGA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AJYA,AENA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AJYA,ANkBA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,AGTA,AFMA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AFMA,AFMA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AS3BA,AJYA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AMjBA,AqB/DA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AKfA,ADGA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,AV8BA,AIZA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AIZA,ADGA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AGTA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AGTA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AGTA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AGTA,A5BoFA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;A2BhFA,ANkBA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,ACHA,AQxBA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AqB9DA,AzB2EA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,AKfA,AS3BA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AOrBA,Ac1CA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,AqB/DA,AS3BA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,ANkBA,AtBkEA;AJaA,AENA,A8B1FA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;AJaA,AgChGA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4BnFA,A5BoFA;A4Bnfile":"index.js","sourcesContent":["\n\nmodule.exports = require('./lib/mocha');\n","\n\n/*!\n * mocha\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar escapeRe = require('escape-string-regexp');\nvar path = require('path');\nvar reporters = require('./reporters');\nvar utils = require('./utils');\n\n/**\n * Expose `Mocha`.\n */\n\nexports = module.exports = Mocha;\n\n/**\n * To require local UIs and reporters when running in node.\n */\n\nif (!process.browser) {\n  var cwd = process.cwd();\n  module.paths.push(cwd, path.join(cwd, 'node_modules'));\n}\n\n/**\n * Expose internals.\n */\n\nexports.utils = utils;\nexports.interfaces = require('./interfaces');\nexports.reporters = reporters;\nexports.Runnable = require('./runnable');\nexports.Context = require('./context');\nexports.Runner = require('./runner');\nexports.Suite = require('./suite');\nexports.Hook = require('./hook');\nexports.Test = require('./test');\n\n/**\n * Return image `name` path.\n *\n * @api private\n * @param {string} name\n * @return {string}\n */\nfunction image (name) {\n  return path.join(__dirname, '../images', name + '.png');\n}\n\n/**\n * Set up mocha with `options`.\n *\n * Options:\n *\n *   - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n *   - `reporter` reporter instance, defaults to `mocha.reporters.spec`\n *   - `globals` array of accepted globals\n *   - `timeout` timeout in milliseconds\n *   - `retries` number of times to retry failed tests\n *   - `bail` bail on the first test failure\n *   - `slow` milliseconds to wait before considering a test slow\n *   - `ignoreLeaks` ignore global leaks\n *   - `fullTrace` display the full stack-trace on failing\n *   - `grep` string or regexp to filter tests with\n *\n * @param {Object} options\n * @api public\n */\nfunction Mocha (options) {\n  options = options || {};\n  this.files = [];\n  this.options = options;\n  if (options.grep) {\n    this.grep(new RegExp(options.grep));\n  }\n  if (options.fgrep) {\n    this.fgrep(options.fgrep);\n  }\n  this.suite = new exports.Suite('', new exports.Context());\n  this.ui(options.ui);\n  this.bail(options.bail);\n  this.reporter(options.reporter, options.reporterOptions);\n  if (typeof options.timeout !== 'undefined' && options.timeout !== null) {\n    this.timeout(options.timeout);\n  }\n  if (typeof options.retries !== 'undefined' && options.retries !== null) {\n    this.retries(options.retries);\n  }\n  this.useColors(options.useColors);\n  if (options.enableTimeouts !== null) {\n    this.enableTimeouts(options.enableTimeouts);\n  }\n  if (options.slow) {\n    this.slow(options.slow);\n  }\n}\n\n/**\n * Enable or disable bailing on the first failure.\n *\n * @api public\n * @param {boolean} [bail]\n */\nMocha.prototype.bail = function (bail) {\n  if (!arguments.length) {\n    bail = true;\n  }\n  this.suite.bail(bail);\n  return this;\n};\n\n/**\n * Add test `file`.\n *\n * @api public\n * @param {string} file\n */\nMocha.prototype.addFile = function (file) {\n  this.files.push(file);\n  return this;\n};\n\n/**\n * Set reporter to `reporter`, defaults to \"spec\".\n *\n * @param {String|Function} reporter name or constructor\n * @param {Object} reporterOptions optional options\n * @api public\n * @param {string|Function} reporter name or constructor\n * @param {Object} reporterOptions optional options\n */\nMocha.prototype.reporter = function (reporter, reporterOptions) {\n  if (typeof reporter === 'function') {\n    this._reporter = reporter;\n  } else {\n    reporter = reporter || 'spec';\n    var _reporter;\n    // Try to load a built-in reporter.\n    if (reporters[reporter]) {\n      _reporter = reporters[reporter];\n    }\n    // Try to load reporters from process.cwd() and node_modules\n    if (!_reporter) {\n      try {\n        _reporter = require(reporter);\n      } catch (err) {\n        if (err.message.indexOf('Cannot find module') !== -1) {\n          // Try to load reporters from a path (absolute or relative)\n          try {\n            _reporter = require(path.resolve(process.cwd(), reporter));\n          } catch (_err) {\n            err.message.indexOf('Cannot find module') !== -1 ? console.warn('\"' + reporter + '\" reporter not found')\n              : console.warn('\"' + reporter + '\" reporter blew up with error:\\n' + err.stack);\n          }\n        } else {\n          console.warn('\"' + reporter + '\" reporter blew up with error:\\n' + err.stack);\n        }\n      }\n    }\n    if (!_reporter && reporter === 'teamcity') {\n      console.warn('The Teamcity reporter was moved to a package named ' +\n        'mocha-teamcity-reporter ' +\n        '(https://npmjs.org/package/mocha-teamcity-reporter).');\n    }\n    if (!_reporter) {\n      throw new Error('invalid reporter \"' + reporter + '\"');\n    }\n    this._reporter = _reporter;\n  }\n  this.options.reporterOptions = reporterOptions;\n  return this;\n};\n\n/**\n * Set test UI `name`, defaults to \"bdd\".\n *\n * @api public\n * @param {string} bdd\n */\nMocha.prototype.ui = function (name) {\n  name = name || 'bdd';\n  this._ui = exports.interfaces[name];\n  if (!this._ui) {\n    try {\n      this._ui = require(name);\n    } catch (err) {\n      throw new Error('invalid interface \"' + name + '\"');\n    }\n  }\n  this._ui = this._ui(this.suite);\n\n  this.suite.on('pre-require', function (context) {\n    exports.afterEach = context.afterEach || context.teardown;\n    exports.after = context.after || context.suiteTeardown;\n    exports.beforeEach = context.beforeEach || context.setup;\n    exports.before = context.before || context.suiteSetup;\n    exports.describe = context.describe || context.suite;\n    exports.it = context.it || context.test;\n    exports.xit = context.xit || context.test.skip;\n    exports.setup = context.setup || context.beforeEach;\n    exports.suiteSetup = context.suiteSetup || context.before;\n    exports.suiteTeardown = context.suiteTeardown || context.after;\n    exports.suite = context.suite || context.describe;\n    exports.teardown = context.teardown || context.afterEach;\n    exports.test = context.test || context.it;\n    exports.run = context.run;\n  });\n\n  return this;\n};\n\n/**\n * Load registered files.\n *\n * @api private\n */\nMocha.prototype.loadFiles = function (fn) {\n  var self = this;\n  var suite = this.suite;\n  this.files.forEach(function (file) {\n    file = path.resolve(file);\n    suite.emit('pre-require', global, file, self);\n    suite.emit('require', require(file), file, self);\n    suite.emit('post-require', global, file, self);\n  });\n  fn && fn();\n};\n\n/**\n * Enable growl support.\n *\n * @api private\n */\nMocha.prototype._growl = function (runner, reporter) {\n  var notify = require('growl');\n\n  runner.on('end', function () {\n    var stats = reporter.stats;\n    if (stats.failures) {\n      var msg = stats.failures + ' of ' + runner.total + ' tests failed';\n      notify(msg, { name: 'mocha', title: 'Failed', image: image('error') });\n    } else {\n      notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {\n        name: 'mocha',\n        title: 'Passed',\n        image: image('ok')\n      });\n    }\n  });\n};\n\n/**\n * Escape string and add it to grep as a regexp.\n *\n * @api public\n * @param str\n * @returns {Mocha}\n */\nMocha.prototype.fgrep = function (str) {\n  return this.grep(new RegExp(escapeRe(str)));\n};\n\n/**\n * Add regexp to grep, if `re` is a string it is escaped.\n *\n * @param {RegExp|String} re\n * @return {Mocha}\n * @api public\n * @param {RegExp|string} re\n * @return {Mocha}\n */\nMocha.prototype.grep = function (re) {\n  if (utils.isString(re)) {\n    // extract args if it's regex-like, i.e: [string, pattern, flag]\n    var arg = re.match(/^\\/(.*)\\/(g|i|)$|.*/);\n    this.options.grep = new RegExp(arg[1] || arg[0], arg[2]);\n  } else {\n    this.options.grep = re;\n  }\n  return this;\n};\n/**\n * Invert `.grep()` matches.\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.invert = function () {\n  this.options.invert = true;\n  return this;\n};\n\n/**\n * Ignore global leaks.\n *\n * @param {Boolean} ignore\n * @return {Mocha}\n * @api public\n * @param {boolean} ignore\n * @return {Mocha}\n */\nMocha.prototype.ignoreLeaks = function (ignore) {\n  this.options.ignoreLeaks = Boolean(ignore);\n  return this;\n};\n\n/**\n * Enable global leak checking.\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.checkLeaks = function () {\n  this.options.ignoreLeaks = false;\n  return this;\n};\n\n/**\n * Display long stack-trace on failing\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.fullTrace = function () {\n  this.options.fullStackTrace = true;\n  return this;\n};\n\n/**\n * Enable growl support.\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.growl = function () {\n  this.options.growl = true;\n  return this;\n};\n\n/**\n * Ignore `globals` array or string.\n *\n * @param {Array|String} globals\n * @return {Mocha}\n * @api public\n * @param {Array|string} globals\n * @return {Mocha}\n */\nMocha.prototype.globals = function (globals) {\n  this.options.globals = (this.options.globals || []).concat(globals);\n  return this;\n};\n\n/**\n * Emit color output.\n *\n * @param {Boolean} colors\n * @return {Mocha}\n * @api public\n * @param {boolean} colors\n * @return {Mocha}\n */\nMocha.prototype.useColors = function (colors) {\n  if (colors !== undefined) {\n    this.options.useColors = colors;\n  }\n  return this;\n};\n\n/**\n * Use inline diffs rather than +/-.\n *\n * @param {Boolean} inlineDiffs\n * @return {Mocha}\n * @api public\n * @param {boolean} inlineDiffs\n * @return {Mocha}\n */\nMocha.prototype.useInlineDiffs = function (inlineDiffs) {\n  this.options.useInlineDiffs = inlineDiffs !== undefined && inlineDiffs;\n  return this;\n};\n\n/**\n * Do not show diffs at all.\n *\n * @param {Boolean} hideDiff\n * @return {Mocha}\n * @api public\n * @param {boolean} hideDiff\n * @return {Mocha}\n */\nMocha.prototype.hideDiff = function (hideDiff) {\n  this.options.hideDiff = hideDiff !== undefined && hideDiff;\n  return this;\n};\n\n/**\n * Set the timeout in milliseconds.\n *\n * @param {Number} timeout\n * @return {Mocha}\n * @api public\n * @param {number} timeout\n * @return {Mocha}\n */\nMocha.prototype.timeout = function (timeout) {\n  this.suite.timeout(timeout);\n  return this;\n};\n\n/**\n * Set the number of times to retry failed tests.\n *\n * @param {Number} retry times\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.retries = function (n) {\n  this.suite.retries(n);\n  return this;\n};\n\n/**\n * Set slowness threshold in milliseconds.\n *\n * @param {Number} slow\n * @return {Mocha}\n * @api public\n * @param {number} slow\n * @return {Mocha}\n */\nMocha.prototype.slow = function (slow) {\n  this.suite.slow(slow);\n  return this;\n};\n\n/**\n * Enable timeouts.\n *\n * @param {Boolean} enabled\n * @return {Mocha}\n * @api public\n * @param {boolean} enabled\n * @return {Mocha}\n */\nMocha.prototype.enableTimeouts = function (enabled) {\n  this.suite.enableTimeouts(arguments.length && enabled !== undefined ? enabled : true);\n  return this;\n};\n\n/**\n * Makes all tests async (accepting a callback)\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.asyncOnly = function () {\n  this.options.asyncOnly = true;\n  return this;\n};\n\n/**\n * Disable syntax highlighting (in browser).\n *\n * @api public\n */\nMocha.prototype.noHighlighting = function () {\n  this.options.noHighlighting = true;\n  return this;\n};\n\n/**\n * Enable uncaught errors to propagate (in browser).\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.allowUncaught = function () {\n  this.options.allowUncaught = true;\n  return this;\n};\n\n/**\n * Delay root suite execution.\n * @returns {Mocha}\n */\nMocha.prototype.delay = function delay () {\n  this.options.delay = true;\n  return this;\n};\n\n/**\n * Tests marked only fail the suite\n * @returns {Mocha}\n */\nMocha.prototype.forbidOnly = function () {\n  this.options.forbidOnly = true;\n  return this;\n};\n\n/**\n * Pending tests and tests marked skip fail the suite\n * @returns {Mocha}\n */\nMocha.prototype.forbidPending = function () {\n  this.options.forbidPending = true;\n  return this;\n};\n\n/**\n * Run tests and invoke `fn()` when complete.\n *\n * Note that `loadFiles` relies on Node's `require` to execute\n * the test interface functions and will be subject to the\n * cache - if the files are already in the `require` cache,\n * they will effectively be skipped. Therefore, to run tests\n * multiple times or to run tests in files that are already\n * in the `require` cache, make sure to clear them from the\n * cache first in whichever manner best suits your needs.\n *\n * @api public\n * @param {Function} fn\n * @return {Runner}\n */\nMocha.prototype.run = function (fn) {\n  if (this.files.length) {\n    this.loadFiles();\n  }\n  var suite = this.suite;\n  var options = this.options;\n  options.files = this.files;\n  var runner = new exports.Runner(suite, options.delay);\n  var reporter = new this._reporter(runner, options);\n  runner.ignoreLeaks = options.ignoreLeaks !== false;\n  runner.fullStackTrace = options.fullStackTrace;\n  runner.asyncOnly = options.asyncOnly;\n  runner.allowUncaught = options.allowUncaught;\n  runner.forbidOnly = options.forbidOnly;\n  runner.forbidPending = options.forbidPending;\n  if (options.grep) {\n    runner.grep(options.grep, options.invert);\n  }\n  if (options.globals) {\n    runner.globals(options.globals);\n  }\n  if (options.growl) {\n    this._growl(runner, reporter);\n  }\n  if (options.useColors !== undefined) {\n    exports.reporters.Base.useColors = options.useColors;\n  }\n  exports.reporters.Base.inlineDiffs = options.useInlineDiffs;\n  exports.reporters.Base.hideDiff = options.hideDiff;\n\n  function done (failures) {\n    if (reporter.done) {\n      reporter.done(failures, fn);\n    } else {\n      fn && fn(failures);\n    }\n  }\n\n  return runner.run(done);\n};\n","\n\n// Alias exports to a their normalized format Mocha#reporter to prevent a need\n// for dynamic (try/catch) requires, which Browserify doesn't handle.\nexports.Base = exports.base = require('./base');\nexports.Dot = exports.dot = require('./dot');\nexports.Doc = exports.doc = require('./doc');\nexports.TAP = exports.tap = require('./tap');\nexports.JSON = exports.json = require('./json');\nexports.HTML = exports.html = require('./html');\nexports.List = exports.list = require('./list');\nexports.Min = exports.min = require('./min');\nexports.Spec = exports.spec = require('./spec');\nexports.Nyan = exports.nyan = require('./nyan');\nexports.XUnit = exports.xunit = require('./xunit');\nexports.Markdown = exports.markdown = require('./markdown');\nexports.Progress = exports.progress = require('./progress');\nexports.Landing = exports.landing = require('./landing');\nexports.JSONStream = exports['json-stream'] = require('./json-stream');\n","\n\n/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar diff = require('diff');\nvar ms = require('../ms');\nvar utils = require('../utils');\nvar supportsColor = process.browser ? null : require('supports-color');\n\n/**\n * Expose `Base`.\n */\n\nexports = module.exports = Base;\n\n/**\n * Save timer references to avoid Sinon interfering.\n * See: https://github.com/mochajs/mocha/issues/237\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Check if both stdio streams are associated with a tty.\n */\n\nvar isatty = tty.isatty(1) && tty.isatty(2);\n\n/**\n * Enable coloring by default, except in the browser interface.\n */\n\nexports.useColors = !process.browser && (supportsColor || (process.env.MOCHA_COLORS !== undefined));\n\n/**\n * Inline diffs instead of +/-\n */\n\nexports.inlineDiffs = false;\n\n/**\n * Default color map.\n */\n\nexports.colors = {\n  pass: 90,\n  fail: 31,\n  'bright pass': 92,\n  'bright fail': 91,\n  'bright yellow': 93,\n  pending: 36,\n  suite: 0,\n  'error title': 0,\n  'error message': 31,\n  'error stack': 90,\n  checkmark: 32,\n  fast: 90,\n  medium: 33,\n  slow: 31,\n  green: 32,\n  light: 90,\n  'diff gutter': 90,\n  'diff added': 32,\n  'diff removed': 31\n};\n\n/**\n * Default symbol map.\n */\n\nexports.symbols = {\n  ok: '✓',\n  err: '✖',\n  dot: '․',\n  comma: ',',\n  bang: '!'\n};\n\n// With node.js on Windows: use symbols available in terminal default fonts\nif (process.platform === 'win32') {\n  exports.symbols.ok = '\\u221A';\n  exports.symbols.err = '\\u00D7';\n  exports.symbols.dot = '.';\n}\n\n/**\n * Color `str` with the given `type`,\n * allowing colors to be disabled,\n * as well as user-defined color\n * schemes.\n *\n * @param {string} type\n * @param {string} str\n * @return {string}\n * @api private\n */\nvar color = exports.color = function (type, str) {\n  if (!exports.useColors) {\n    return String(str);\n  }\n  return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Expose term window size, with some defaults for when stderr is not a tty.\n */\n\nexports.window = {\n  width: 75\n};\n\nif (isatty) {\n  exports.window.width = process.stdout.getWindowSize\n    ? process.stdout.getWindowSize(1)[0]\n    : tty.getWindowSize()[1];\n}\n\n/**\n * Expose some basic cursor interactions that are common among reporters.\n */\n\nexports.cursor = {\n  hide: function () {\n    isatty && process.stdout.write('\\u001b[?25l');\n  },\n\n  show: function () {\n    isatty && process.stdout.write('\\u001b[?25h');\n  },\n\n  deleteLine: function () {\n    isatty && process.stdout.write('\\u001b[2K');\n  },\n\n  beginningOfLine: function () {\n    isatty && process.stdout.write('\\u001b[0G');\n  },\n\n  CR: function () {\n    if (isatty) {\n      exports.cursor.deleteLine();\n      exports.cursor.beginningOfLine();\n    } else {\n      process.stdout.write('\\r');\n    }\n  }\n};\n\nfunction showDiff (err) {\n  return err && err.showDiff !== false && sameType(err.actual, err.expected) && err.expected !== undefined;\n}\n\nfunction stringifyDiffObjs (err) {\n  if (!utils.isString(err.actual) || !utils.isString(err.expected)) {\n    err.actual = utils.stringify(err.actual);\n    err.expected = utils.stringify(err.expected);\n  }\n}\n\n/**\n * Output the given `failures` as a list.\n *\n * @param {Array} failures\n * @api public\n */\n\nexports.list = function (failures) {\n  console.log();\n  failures.forEach(function (test, i) {\n    // format\n    var fmt = color('error title', '  %s) %s:\\n') +\n      color('error message', '     %s') +\n      color('error stack', '\\n%s\\n');\n\n    // msg\n    var msg;\n    var err = test.err;\n    var message;\n    if (err.message && typeof err.message.toString === 'function') {\n      message = err.message + '';\n    } else if (typeof err.inspect === 'function') {\n      message = err.inspect() + '';\n    } else {\n      message = '';\n    }\n    var stack = err.stack || message;\n    var index = message ? stack.indexOf(message) : -1;\n\n    if (index === -1) {\n      msg = message;\n    } else {\n      index += message.length;\n      msg = stack.slice(0, index);\n      // remove msg from stack\n      stack = stack.slice(index + 1);\n    }\n\n    // uncaught\n    if (err.uncaught) {\n      msg = 'Uncaught ' + msg;\n    }\n    // explicitly show diff\n    if (!exports.hideDiff && showDiff(err)) {\n      stringifyDiffObjs(err);\n      fmt = color('error title', '  %s) %s:\\n%s') + color('error stack', '\\n%s\\n');\n      var match = message.match(/^([^:]+): expected/);\n      msg = '\\n      ' + color('error message', match ? match[1] : msg);\n\n      if (exports.inlineDiffs) {\n        msg += inlineDiff(err);\n      } else {\n        msg += unifiedDiff(err);\n      }\n    }\n\n    // indent stack trace\n    stack = stack.replace(/^/gm, '  ');\n\n    // indented test title\n    var testTitle = '';\n    test.titlePath().forEach(function (str, index) {\n      if (index !== 0) {\n        testTitle += '\\n     ';\n      }\n      for (var i = 0; i < index; i++) {\n        testTitle += '  ';\n      }\n      testTitle += str;\n    });\n\n    console.log(fmt, (i + 1), testTitle, msg, stack);\n  });\n};\n\n/**\n * Initialize a new `Base` reporter.\n *\n * All other reporters generally\n * inherit from this reporter, providing\n * stats such as test duration, number\n * of tests passed / failed etc.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Base (runner) {\n  var stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 };\n  var failures = this.failures = [];\n\n  if (!runner) {\n    return;\n  }\n  this.runner = runner;\n\n  runner.stats = stats;\n\n  runner.on('start', function () {\n    stats.start = new Date();\n  });\n\n  runner.on('suite', function (suite) {\n    stats.suites = stats.suites || 0;\n    suite.root || stats.suites++;\n  });\n\n  runner.on('test end', function () {\n    stats.tests = stats.tests || 0;\n    stats.tests++;\n  });\n\n  runner.on('pass', function (test) {\n    stats.passes = stats.passes || 0;\n\n    if (test.duration > test.slow()) {\n      test.speed = 'slow';\n    } else if (test.duration > test.slow() / 2) {\n      test.speed = 'medium';\n    } else {\n      test.speed = 'fast';\n    }\n\n    stats.passes++;\n  });\n\n  runner.on('fail', function (test, err) {\n    stats.failures = stats.failures || 0;\n    stats.failures++;\n    if (showDiff(err)) {\n      stringifyDiffObjs(err);\n    }\n    test.err = err;\n    failures.push(test);\n  });\n\n  runner.on('end', function () {\n    stats.end = new Date();\n    stats.duration = new Date() - stats.start;\n  });\n\n  runner.on('pending', function () {\n    stats.pending++;\n  });\n}\n\n/**\n * Output common epilogue used by many of\n * the bundled reporters.\n *\n * @api public\n */\nBase.prototype.epilogue = function () {\n  var stats = this.stats;\n  var fmt;\n\n  console.log();\n\n  // passes\n  fmt = color('bright pass', ' ') +\n    color('green', ' %d passing') +\n    color('light', ' (%s)');\n\n  console.log(fmt,\n    stats.passes || 0,\n    ms(stats.duration));\n\n  // pending\n  if (stats.pending) {\n    fmt = color('pending', ' ') +\n      color('pending', ' %d pending');\n\n    console.log(fmt, stats.pending);\n  }\n\n  // failures\n  if (stats.failures) {\n    fmt = color('fail', '  %d failing');\n\n    console.log(fmt, stats.failures);\n\n    Base.list(this.failures);\n    console.log();\n  }\n\n  console.log();\n};\n\n/**\n * Pad the given `str` to `len`.\n *\n * @api private\n * @param {string} str\n * @param {string} len\n * @return {string}\n */\nfunction pad (str, len) {\n  str = String(str);\n  return Array(len - str.length + 1).join(' ') + str;\n}\n\n/**\n * Returns an inline diff between 2 strings with coloured ANSI output\n *\n * @api private\n * @param {Error} err with actual/expected\n * @return {string} Diff\n */\nfunction inlineDiff (err) {\n  var msg = errorDiff(err);\n\n  // linenos\n  var lines = msg.split('\\n');\n  if (lines.length > 4) {\n    var width = String(lines.length).length;\n    msg = lines.map(function (str, i) {\n      return pad(++i, width) + ' |' + ' ' + str;\n    }).join('\\n');\n  }\n\n  // legend\n  msg = '\\n' +\n    color('diff removed', 'actual') +\n    ' ' +\n    color('diff added', 'expected') +\n    '\\n\\n' +\n    msg +\n    '\\n';\n\n  // indent\n  msg = msg.replace(/^/gm, '      ');\n  return msg;\n}\n\n/**\n * Returns a unified diff between two strings.\n *\n * @api private\n * @param {Error} err with actual/expected\n * @return {string} The diff.\n */\nfunction unifiedDiff (err) {\n  var indent = '      ';\n  function cleanUp (line) {\n    if (line[0] === '+') {\n      return indent + colorLines('diff added', line);\n    }\n    if (line[0] === '-') {\n      return indent + colorLines('diff removed', line);\n    }\n    if (line.match(/@@/)) {\n      return '--';\n    }\n    if (line.match(/\\\\ No newline/)) {\n      return null;\n    }\n    return indent + line;\n  }\n  function notBlank (line) {\n    return typeof line !== 'undefined' && line !== null;\n  }\n  var msg = diff.createPatch('string', err.actual, err.expected);\n  var lines = msg.split('\\n').splice(5);\n  return '\\n      ' +\n    colorLines('diff added', '+ expected') + ' ' +\n    colorLines('diff removed', '- actual') +\n    '\\n\\n' +\n    lines.map(cleanUp).filter(notBlank).join('\\n');\n}\n\n/**\n * Return a character diff for `err`.\n *\n * @api private\n * @param {Error} err\n * @return {string}\n */\nfunction errorDiff (err) {\n  return diff.diffWordsWithSpace(err.actual, err.expected).map(function (str) {\n    if (str.added) {\n      return colorLines('diff added', str.value);\n    }\n    if (str.removed) {\n      return colorLines('diff removed', str.value);\n    }\n    return str.value;\n  }).join('');\n}\n\n/**\n * Color lines for `str`, using the color `name`.\n *\n * @api private\n * @param {string} name\n * @param {string} str\n * @return {string}\n */\nfunction colorLines (name, str) {\n  return str.split('\\n').map(function (str) {\n    return color(name, str);\n  }).join('\\n');\n}\n\n/**\n * Object#toString reference.\n */\nvar objToString = Object.prototype.toString;\n\n/**\n * Check that a / b have the same type.\n *\n * @api private\n * @param {Object} a\n * @param {Object} b\n * @return {boolean}\n */\nfunction sameType (a, b) {\n  return objToString.call(a) === objToString.call(b);\n}\n","\n\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * @api public\n * @param {string|number} val\n * @return {string|number}\n */\nmodule.exports = function (val) {\n  if (typeof val === 'string') {\n    return parse(val);\n  }\n  return format(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @api private\n * @param {string} str\n * @return {number}\n */\nfunction parse (str) {\n  var match = (/^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i).exec(str);\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n    default:\n      // No default case\n  }\n}\n\n/**\n * Format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction format (ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n","\n\n/* eslint-env browser */\n\n/**\n * Module dependencies.\n */\n\nvar basename = require('path').basename;\nvar debug = require('debug')('mocha:watch');\nvar exists = require('fs').existsSync;\nvar glob = require('glob');\nvar path = require('path');\nvar join = path.join;\nvar readdirSync = require('fs').readdirSync;\nvar statSync = require('fs').statSync;\nvar watchFile = require('fs').watchFile;\nvar lstatSync = require('fs').lstatSync;\nvar he = require('he');\n\n/**\n * Ignored directories.\n */\n\nvar ignore = ['node_modules', '.git'];\n\nexports.inherits = require('util').inherits;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @api private\n * @param  {string} html\n * @return {string}\n */\nexports.escape = function (html) {\n  return he.encode(String(html), { useNamedReferences: false });\n};\n\n/**\n * Test if the given obj is type of string.\n *\n * @api private\n * @param {Object} obj\n * @return {boolean}\n */\nexports.isString = function (obj) {\n  return typeof obj === 'string';\n};\n\n/**\n * Watch the given `files` for changes\n * and invoke `fn(file)` on modification.\n *\n * @api private\n * @param {Array} files\n * @param {Function} fn\n */\nexports.watch = function (files, fn) {\n  var options = { interval: 100 };\n  files.forEach(function (file) {\n    debug('file %s', file);\n    watchFile(file, options, function (curr, prev) {\n      if (prev.mtime < curr.mtime) {\n        fn(file);\n      }\n    });\n  });\n};\n\n/**\n * Ignored files.\n *\n * @api private\n * @param {string} path\n * @return {boolean}\n */\nfunction ignored (path) {\n  return !~ignore.indexOf(path);\n}\n\n/**\n * Lookup files in the given `dir`.\n *\n * @api private\n * @param {string} dir\n * @param {string[]} [ext=['.js']]\n * @param {Array} [ret=[]]\n * @return {Array}\n */\nexports.files = function (dir, ext, ret) {\n  ret = ret || [];\n  ext = ext || ['js'];\n\n  var re = new RegExp('\\\\.(' + ext.join('|') + ')$');\n\n  readdirSync(dir)\n    .filter(ignored)\n    .forEach(function (path) {\n      path = join(dir, path);\n      if (lstatSync(path).isDirectory()) {\n        exports.files(path, ext, ret);\n      } else if (path.match(re)) {\n        ret.push(path);\n      }\n    });\n\n  return ret;\n};\n\n/**\n * Compute a slug from the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nexports.slug = function (str) {\n  return str\n    .toLowerCase()\n    .replace(/ +/g, '-')\n    .replace(/[^-\\w]/g, '');\n};\n\n/**\n * Strip the function definition from `str`, and re-indent for pre whitespace.\n *\n * @param {string} str\n * @return {string}\n */\nexports.clean = function (str) {\n  str = str\n    .replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '')\n    // (traditional)->  space/name     parameters    body     (lambda)-> parameters       body   multi-statement/single          keep body content\n    .replace(/^function(?:\\s*|\\s+[^(]*)\\([^)]*\\)\\s*\\{((?:.|\\n)*?)\\s*\\}$|^\\([^)]*\\)\\s*=>\\s*(?:\\{((?:.|\\n)*?)\\s*\\}|((?:.|\\n)*))$/, '$1$2$3');\n\n  var spaces = str.match(/^\\n?( *)/)[1].length;\n  var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n  var re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs || spaces) + '}', 'gm');\n\n  str = str.replace(re, '');\n\n  return str.trim();\n};\n\n/**\n * Parse the given `qs`.\n *\n * @api private\n * @param {string} qs\n * @return {Object}\n */\nexports.parseQuery = function (qs) {\n  return qs.replace('?', '').split('&').reduce(function (obj, pair) {\n    var i = pair.indexOf('=');\n    var key = pair.slice(0, i);\n    var val = pair.slice(++i);\n\n    // Due to how the URLSearchParams API treats spaces\n    obj[key] = decodeURIComponent(val.replace(/\\+/g, '%20'));\n\n    return obj;\n  }, {});\n};\n\n/**\n * Highlight the given string of `js`.\n *\n * @api private\n * @param {string} js\n * @return {string}\n */\nfunction highlight (js) {\n  return js\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n    .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n    .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/\\bnew[ \\t]+(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n    .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>');\n}\n\n/**\n * Highlight the contents of tag `name`.\n *\n * @api private\n * @param {string} name\n */\nexports.highlightTags = function (name) {\n  var code = document.getElementById('mocha').getElementsByTagName(name);\n  for (var i = 0, len = code.length; i < len; ++i) {\n    code[i].innerHTML = highlight(code[i].innerHTML);\n  }\n};\n\n/**\n * If a value could have properties, and has none, this function is called,\n * which returns a string representation of the empty value.\n *\n * Functions w/ no properties return `'[Function]'`\n * Arrays w/ length === 0 return `'[]'`\n * Objects w/ no properties return `'{}'`\n * All else: return result of `value.toString()`\n *\n * @api private\n * @param {*} value The value to inspect.\n * @param {string} typeHint The type of the value\n * @returns {string}\n */\nfunction emptyRepresentation (value, typeHint) {\n  switch (typeHint) {\n    case 'function':\n      return '[Function]';\n    case 'object':\n      return '{}';\n    case 'array':\n      return '[]';\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n * is.\n *\n * @api private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n * @param {*} value The value to test.\n * @returns {string} Computed type\n * @example\n * type({}) // 'object'\n * type([]) // 'array'\n * type(1) // 'number'\n * type(false) // 'boolean'\n * type(Infinity) // 'number'\n * type(null) // 'null'\n * type(new Date()) // 'date'\n * type(/foo/) // 'regexp'\n * type('type') // 'string'\n * type(global) // 'global'\n * type(new String('foo') // 'object'\n */\nvar type = exports.type = function type (value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (Buffer.isBuffer(value)) {\n    return 'buffer';\n  }\n  return Object.prototype.toString.call(value)\n    .replace(/^\\[.+\\s(.+?)]$/, '$1')\n    .toLowerCase();\n};\n\n/**\n * Stringify `value`. Different behavior depending on type of value:\n *\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n * - If `value` is an *empty* object, function, or array, return result of function\n *   {@link emptyRepresentation}.\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n *   JSON.stringify().\n *\n * @api private\n * @see exports.type\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function (value) {\n  var typeHint = type(value);\n\n  if (!~['object', 'array', 'function'].indexOf(typeHint)) {\n    if (typeHint === 'buffer') {\n      var json = Buffer.prototype.toJSON.call(value);\n      // Based on the toJSON result\n      return jsonStringify(json.data && json.type ? json.data : json, 2)\n        .replace(/,(\\n|$)/g, '$1');\n    }\n\n    // IE7/IE8 has a bizarre String constructor; needs to be coerced\n    // into an array and back to obj.\n    if (typeHint === 'string' && typeof value === 'object') {\n      value = value.split('').reduce(function (acc, char, idx) {\n        acc[idx] = char;\n        return acc;\n      }, {});\n      typeHint = 'object';\n    } else {\n      return jsonStringify(value);\n    }\n  }\n\n  for (var prop in value) {\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {\n      return jsonStringify(exports.canonicalize(value, null, typeHint), 2).replace(/,(\\n|$)/g, '$1');\n    }\n  }\n\n  return emptyRepresentation(value, typeHint);\n};\n\n/**\n * like JSON.stringify but more sense.\n *\n * @api private\n * @param {Object}  object\n * @param {number=} spaces\n * @param {number=} depth\n * @returns {*}\n */\nfunction jsonStringify (object, spaces, depth) {\n  if (typeof spaces === 'undefined') {\n    // primitive types\n    return _stringify(object);\n  }\n\n  depth = depth || 1;\n  var space = spaces * depth;\n  var str = Array.isArray(object) ? '[' : '{';\n  var end = Array.isArray(object) ? ']' : '}';\n  var length = typeof object.length === 'number' ? object.length : Object.keys(object).length;\n  // `.repeat()` polyfill\n  function repeat (s, n) {\n    return new Array(n).join(s);\n  }\n\n  function _stringify (val) {\n    switch (type(val)) {\n      case 'null':\n      case 'undefined':\n        val = '[' + val + ']';\n        break;\n      case 'array':\n      case 'object':\n        val = jsonStringify(val, spaces, depth + 1);\n        break;\n      case 'boolean':\n      case 'regexp':\n      case 'symbol':\n      case 'number':\n        val = val === 0 && (1 / val) === -Infinity // `-0`\n          ? '-0'\n          : val.toString();\n        break;\n      case 'date':\n        var sDate = isNaN(val.getTime()) ? val.toString() : val.toISOString();\n        val = '[Date: ' + sDate + ']';\n        break;\n      case 'buffer':\n        var json = val.toJSON();\n        // Based on the toJSON result\n        json = json.data && json.type ? json.data : json;\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n        break;\n      default:\n        val = (val === '[Function]' || val === '[Circular]')\n          ? val\n          : JSON.stringify(val); // string\n    }\n    return val;\n  }\n\n  for (var i in object) {\n    if (!Object.prototype.hasOwnProperty.call(object, i)) {\n      continue; // not my business\n    }\n    --length;\n    str += '\\n ' + repeat(' ', space) +\n      (Array.isArray(object) ? '' : '\"' + i + '\": ') + // key\n      _stringify(object[i]) + // value\n      (length ? ',' : ''); // comma\n  }\n\n  return str +\n    // [], {}\n    (str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end);\n}\n\n/**\n * Return a new Thing that has the keys in sorted order. Recursive.\n *\n * If the Thing...\n * - has already been seen, return string `'[Circular]'`\n * - is `undefined`, return string `'[undefined]'`\n * - is `null`, return value `null`\n * - is some other primitive, return the value\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n *\n * @api private\n * @see {@link exports.stringify}\n * @param {*} value Thing to inspect.  May or may not have properties.\n * @param {Array} [stack=[]] Stack of seen values\n * @param {string} [typeHint] Type hint\n * @return {(Object|Array|Function|string|undefined)}\n */\nexports.canonicalize = function canonicalize (value, stack, typeHint) {\n  var canonicalizedObj;\n  /* eslint-disable no-unused-vars */\n  var prop;\n  /* eslint-enable no-unused-vars */\n  typeHint = typeHint || type(value);\n  function withStack (value, fn) {\n    stack.push(value);\n    fn();\n    stack.pop();\n  }\n\n  stack = stack || [];\n\n  if (stack.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  switch (typeHint) {\n    case 'undefined':\n    case 'buffer':\n    case 'null':\n      canonicalizedObj = value;\n      break;\n    case 'array':\n      withStack(value, function () {\n        canonicalizedObj = value.map(function (item) {\n          return exports.canonicalize(item, stack);\n        });\n      });\n      break;\n    case 'function':\n      /* eslint-disable guard-for-in */\n      for (prop in value) {\n        canonicalizedObj = {};\n        break;\n      }\n      /* eslint-enable guard-for-in */\n      if (!canonicalizedObj) {\n        canonicalizedObj = emptyRepresentation(value, typeHint);\n        break;\n      }\n    /* falls through */\n    case 'object':\n      canonicalizedObj = canonicalizedObj || {};\n      withStack(value, function () {\n        Object.keys(value).sort().forEach(function (key) {\n          canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n        });\n      });\n      break;\n    case 'date':\n    case 'number':\n    case 'regexp':\n    case 'boolean':\n    case 'symbol':\n      canonicalizedObj = value;\n      break;\n    default:\n      canonicalizedObj = value + '';\n  }\n\n  return canonicalizedObj;\n};\n\n/**\n * Lookup file names at the given `path`.\n *\n * @api public\n * @param {string} path Base path to start searching from.\n * @param {string[]} extensions File extensions to look for.\n * @param {boolean} recursive Whether or not to recurse into subdirectories.\n * @return {string[]} An array of paths.\n */\nexports.lookupFiles = function lookupFiles (path, extensions, recursive) {\n  var files = [];\n\n  if (!exists(path)) {\n    if (exists(path + '.js')) {\n      path += '.js';\n    } else {\n      files = glob.sync(path);\n      if (!files.length) {\n        throw new Error(\"cannot resolve path (or pattern) '\" + path + \"'\");\n      }\n      return files;\n    }\n  }\n\n  try {\n    var stat = statSync(path);\n    if (stat.isFile()) {\n      return path;\n    }\n  } catch (err) {\n    // ignore error\n    return;\n  }\n\n  readdirSync(path).forEach(function (file) {\n    file = join(path, file);\n    try {\n      var stat = statSync(file);\n      if (stat.isDirectory()) {\n        if (recursive) {\n          files = files.concat(lookupFiles(file, extensions, recursive));\n        }\n        return;\n      }\n    } catch (err) {\n      // ignore error\n      return;\n    }\n    var re = new RegExp('\\\\.(?:' + extensions.join('|') + ')$');\n    if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') {\n      return;\n    }\n    files.push(file);\n  });\n\n  return files;\n};\n\n/**\n * Generate an undefined error with a message warning the user.\n *\n * @return {Error}\n */\n\nexports.undefinedError = function () {\n  return new Error('Caught undefined error, did you throw without specifying what?');\n};\n\n/**\n * Generate an undefined error if `err` is not defined.\n *\n * @param {Error} err\n * @return {Error}\n */\n\nexports.getError = function (err) {\n  return err || exports.undefinedError();\n};\n\n/**\n * @summary\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n * @description\n * When invoking this function you get a filter function that get the Error.stack as an input,\n * and return a prettify output.\n * (i.e: strip Mocha and internal node functions from stack trace).\n * @returns {Function}\n */\nexports.stackTraceFilter = function () {\n  // TODO: Replace with `process.browser`\n  var is = typeof document === 'undefined' ? { node: true } : { browser: true };\n  var slash = path.sep;\n  var cwd;\n  if (is.node) {\n    cwd = process.cwd() + slash;\n  } else {\n    cwd = (typeof location === 'undefined'\n      ? window.location\n      : location).href.replace(/\\/[^/]*$/, '/');\n    slash = '/';\n  }\n\n  function isMochaInternal (line) {\n    return (~line.indexOf('node_modules' + slash + 'mocha' + slash)) ||\n      (~line.indexOf('node_modules' + slash + 'mocha.js')) ||\n      (~line.indexOf('bower_components' + slash + 'mocha.js')) ||\n      (~line.indexOf(slash + 'mocha.js'));\n  }\n\n  function isNodeInternal (line) {\n    return (~line.indexOf('(timers.js:')) ||\n      (~line.indexOf('(events.js:')) ||\n      (~line.indexOf('(node.js:')) ||\n      (~line.indexOf('(module.js:')) ||\n      (~line.indexOf('GeneratorFunctionPrototype.next (native)')) ||\n      false;\n  }\n\n  return function (stack) {\n    stack = stack.split('\\n');\n\n    stack = stack.reduce(function (list, line) {\n      if (isMochaInternal(line)) {\n        return list;\n      }\n\n      if (is.node && isNodeInternal(line)) {\n        return list;\n      }\n\n      // Clean up cwd(absolute)\n      if (/\\(?.+:\\d+:\\d+\\)?$/.test(line)) {\n        line = line.replace(cwd, '');\n      }\n\n      list.push(line);\n      return list;\n    }, []);\n\n    return stack.join('\\n');\n  };\n};\n\n/**\n * Crude, but effective.\n * @api\n * @param {*} value\n * @returns {boolean} Whether or not `value` is a Promise\n */\nexports.isPromise = function isPromise (value) {\n  return typeof value === 'object' && typeof value.then === 'function';\n};\n\n/**\n * It's a noop.\n * @api\n */\nexports.noop = function () {};\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = Dot;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Dot (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * 0.75 | 0;\n  var n = -1;\n\n  runner.on('start', function () {\n    process.stdout.write('\\n');\n  });\n\n  runner.on('pending', function () {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    process.stdout.write(color('pending', Base.symbols.comma));\n  });\n\n  runner.on('pass', function (test) {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    if (test.speed === 'slow') {\n      process.stdout.write(color('bright yellow', Base.symbols.dot));\n    } else {\n      process.stdout.write(color(test.speed, Base.symbols.dot));\n    }\n  });\n\n  runner.on('fail', function () {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    process.stdout.write(color('fail', Base.symbols.bang));\n  });\n\n  runner.on('end', function () {\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Dot, Base);\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\n\n/**\n * Expose `Doc`.\n */\n\nexports = module.exports = Doc;\n\n/**\n * Initialize a new `Doc` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\nfunction Doc (runner) {\n  Base.call(this, runner);\n\n  var indents = 2;\n\n  function indent () {\n    return Array(indents).join('  ');\n  }\n\n  runner.on('suite', function (suite) {\n    if (suite.root) {\n      return;\n    }\n    ++indents;\n    console.log('%s<section class=\"suite\">', indent());\n    ++indents;\n    console.log('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n    console.log('%s<dl>', indent());\n  });\n\n  runner.on('suite end', function (suite) {\n    if (suite.root) {\n      return;\n    }\n    console.log('%s</dl>', indent());\n    --indents;\n    console.log('%s</section>', indent());\n    --indents;\n  });\n\n  runner.on('pass', function (test) {\n    console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n    var code = utils.escape(utils.clean(test.body));\n    console.log('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n  });\n\n  runner.on('fail', function (test, err) {\n    console.log('%s  <dt class=\"error\">%s</dt>', indent(), utils.escape(test.title));\n    var code = utils.escape(utils.clean(test.body));\n    console.log('%s  <dd class=\"error\"><pre><code>%s</code></pre></dd>', indent(), code);\n    console.log('%s  <dd class=\"error\">%s</dd>', indent(), utils.escape(err));\n  });\n}\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `TAP`.\n */\n\nexports = module.exports = TAP;\n\n/**\n * Initialize a new `TAP` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction TAP (runner) {\n  Base.call(this, runner);\n\n  var n = 1;\n  var passes = 0;\n  var failures = 0;\n\n  runner.on('start', function () {\n    var total = runner.grepTotal(runner.suite);\n    console.log('%d..%d', 1, total);\n  });\n\n  runner.on('test end', function () {\n    ++n;\n  });\n\n  runner.on('pending', function (test) {\n    console.log('ok %d %s # SKIP -', n, title(test));\n  });\n\n  runner.on('pass', function (test) {\n    passes++;\n    console.log('ok %d %s', n, title(test));\n  });\n\n  runner.on('fail', function (test, err) {\n    failures++;\n    console.log('not ok %d %s', n, title(test));\n    if (err.stack) {\n      console.log(err.stack.replace(/^/gm, '  '));\n    }\n  });\n\n  runner.on('end', function () {\n    console.log('# tests ' + (passes + failures));\n    console.log('# pass ' + passes);\n    console.log('# fail ' + failures);\n  });\n}\n\n/**\n * Return a TAP-safe title of `test`\n *\n * @api private\n * @param {Object} test\n * @return {String}\n */\nfunction title (test) {\n  return test.fullTitle().replace(/#/g, '');\n}\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Initialize a new `JSON` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction JSONReporter (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n\n  runner.on('test end', function (test) {\n    tests.push(test);\n  });\n\n  runner.on('pass', function (test) {\n    passes.push(test);\n  });\n\n  runner.on('fail', function (test) {\n    failures.push(test);\n  });\n\n  runner.on('pending', function (test) {\n    pending.push(test);\n  });\n\n  runner.on('end', function () {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n\n    runner.testResults = obj;\n\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @api private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean (test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    err: errorJSON(test.err || {})\n  };\n}\n\n/**\n * Transform `error` into a JSON object.\n *\n * @api private\n * @param {Error} err\n * @return {Object}\n */\nfunction errorJSON (err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function (key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n","\n\n/* eslint-env browser */\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\nvar Progress = require('../browser/progress');\nvar escapeRe = require('escape-string-regexp');\nvar escape = utils.escape;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Expose `HTML`.\n */\n\nexports = module.exports = HTML;\n\n/**\n * Stats template.\n */\n\nvar statsTemplate = '<ul id=\"mocha-stats\">' +\n  '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>' +\n  '<li class=\"passes\"><a href=\"javascript:void(0);\">passes:</a> <em>0</em></li>' +\n  '<li class=\"failures\"><a href=\"javascript:void(0);\">failures:</a> <em>0</em></li>' +\n  '<li class=\"duration\">duration: <em>0</em>s</li>' +\n  '</ul>';\n\nvar playIcon = '&#x2023;';\n\n/**\n * Initialize a new `HTML` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction HTML (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var stats = this.stats;\n  var stat = fragment(statsTemplate);\n  var items = stat.getElementsByTagName('li');\n  var passes = items[1].getElementsByTagName('em')[0];\n  var passesLink = items[1].getElementsByTagName('a')[0];\n  var failures = items[2].getElementsByTagName('em')[0];\n  var failuresLink = items[2].getElementsByTagName('a')[0];\n  var duration = items[3].getElementsByTagName('em')[0];\n  var canvas = stat.getElementsByTagName('canvas')[0];\n  var report = fragment('<ul id=\"mocha-report\"></ul>');\n  var stack = [report];\n  var progress;\n  var ctx;\n  var root = document.getElementById('mocha');\n\n  if (canvas.getContext) {\n    var ratio = window.devicePixelRatio || 1;\n    canvas.style.width = canvas.width;\n    canvas.style.height = canvas.height;\n    canvas.width *= ratio;\n    canvas.height *= ratio;\n    ctx = canvas.getContext('2d');\n    ctx.scale(ratio, ratio);\n    progress = new Progress();\n  }\n\n  if (!root) {\n    return error('#mocha div missing, add it to your document');\n  }\n\n  // pass toggle\n  on(passesLink, 'click', function (evt) {\n    evt.preventDefault();\n    unhide();\n    var name = (/pass/).test(report.className) ? '' : ' pass';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) {\n      hideSuitesWithout('test pass');\n    }\n  });\n\n  // failure toggle\n  on(failuresLink, 'click', function (evt) {\n    evt.preventDefault();\n    unhide();\n    var name = (/fail/).test(report.className) ? '' : ' fail';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) {\n      hideSuitesWithout('test fail');\n    }\n  });\n\n  root.appendChild(stat);\n  root.appendChild(report);\n\n  if (progress) {\n    progress.size(40);\n  }\n\n  runner.on('suite', function (suite) {\n    if (suite.root) {\n      return;\n    }\n\n    // suite\n    var url = self.suiteURL(suite);\n    var el = fragment('<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>', url, escape(suite.title));\n\n    // container\n    stack[0].appendChild(el);\n    stack.unshift(document.createElement('ul'));\n    el.appendChild(stack[0]);\n  });\n\n  runner.on('suite end', function (suite) {\n    if (suite.root) {\n      updateStats();\n      return;\n    }\n    stack.shift();\n  });\n\n  runner.on('pass', function (test) {\n    var url = self.testURL(test);\n    var markup = '<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> ' +\n      '<a href=\"%s\" class=\"replay\">' + playIcon + '</a></h2></li>';\n    var el = fragment(markup, test.speed, test.title, test.duration, url);\n    self.addCodeToggle(el, test.body);\n    appendToStack(el);\n    updateStats();\n  });\n\n  runner.on('fail', function (test) {\n    var el = fragment('<li class=\"test fail\"><h2>%e <a href=\"%e\" class=\"replay\">' + playIcon + '</a></h2></li>',\n      test.title, self.testURL(test));\n    var stackString; // Note: Includes leading newline\n    var message = test.err.toString();\n\n    // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\n    // check for the result of the stringifying.\n    if (message === '[object Error]') {\n      message = test.err.message;\n    }\n\n    if (test.err.stack) {\n      var indexOfMessage = test.err.stack.indexOf(test.err.message);\n      if (indexOfMessage === -1) {\n        stackString = test.err.stack;\n      } else {\n        stackString = test.err.stack.substr(test.err.message.length + indexOfMessage);\n      }\n    } else if (test.err.sourceURL && test.err.line !== undefined) {\n      // Safari doesn't give you a stack. Let's at least provide a source line.\n      stackString = '\\n(' + test.err.sourceURL + ':' + test.err.line + ')';\n    }\n\n    stackString = stackString || '';\n\n    if (test.err.htmlMessage && stackString) {\n      el.appendChild(fragment('<div class=\"html-error\">%s\\n<pre class=\"error\">%e</pre></div>',\n        test.err.htmlMessage, stackString));\n    } else if (test.err.htmlMessage) {\n      el.appendChild(fragment('<div class=\"html-error\">%s</div>', test.err.htmlMessage));\n    } else {\n      el.appendChild(fragment('<pre class=\"error\">%e%e</pre>', message, stackString));\n    }\n\n    self.addCodeToggle(el, test.body);\n    appendToStack(el);\n    updateStats();\n  });\n\n  runner.on('pending', function (test) {\n    var el = fragment('<li class=\"test pass pending\"><h2>%e</h2></li>', test.title);\n    appendToStack(el);\n    updateStats();\n  });\n\n  function appendToStack (el) {\n    // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\n    if (stack[0]) {\n      stack[0].appendChild(el);\n    }\n  }\n\n  function updateStats () {\n    // TODO: add to stats\n    var percent = stats.tests / runner.total * 100 | 0;\n    if (progress) {\n      progress.update(percent).draw(ctx);\n    }\n\n    // update stats\n    var ms = new Date() - stats.start;\n    text(passes, stats.passes);\n    text(failures, stats.failures);\n    text(duration, (ms / 1000).toFixed(2));\n  }\n}\n\n/**\n * Makes a URL, preserving querystring (\"search\") parameters.\n *\n * @param {string} s\n * @return {string} A new URL.\n */\nfunction makeUrl (s) {\n  var search = window.location.search;\n\n  // Remove previous grep query parameter if present\n  if (search) {\n    search = search.replace(/[?&]grep=[^&\\s]*/g, '').replace(/^&/, '?');\n  }\n\n  return window.location.pathname + (search ? search + '&' : '?') + 'grep=' + encodeURIComponent(escapeRe(s));\n}\n\n/**\n * Provide suite URL.\n *\n * @param {Object} [suite]\n */\nHTML.prototype.suiteURL = function (suite) {\n  return makeUrl(suite.fullTitle());\n};\n\n/**\n * Provide test URL.\n *\n * @param {Object} [test]\n */\nHTML.prototype.testURL = function (test) {\n  return makeUrl(test.fullTitle());\n};\n\n/**\n * Adds code toggle functionality for the provided test's list element.\n *\n * @param {HTMLLIElement} el\n * @param {string} contents\n */\nHTML.prototype.addCodeToggle = function (el, contents) {\n  var h2 = el.getElementsByTagName('h2')[0];\n\n  on(h2, 'click', function () {\n    pre.style.display = pre.style.display === 'none' ? 'block' : 'none';\n  });\n\n  var pre = fragment('<pre><code>%e</code></pre>', utils.clean(contents));\n  el.appendChild(pre);\n  pre.style.display = 'none';\n};\n\n/**\n * Display error `msg`.\n *\n * @param {string} msg\n */\nfunction error (msg) {\n  document.body.appendChild(fragment('<div id=\"mocha-error\">%s</div>', msg));\n}\n\n/**\n * Return a DOM fragment from `html`.\n *\n * @param {string} html\n */\nfunction fragment (html) {\n  var args = arguments;\n  var div = document.createElement('div');\n  var i = 1;\n\n  div.innerHTML = html.replace(/%([se])/g, function (_, type) {\n    switch (type) {\n      case 's': return String(args[i++]);\n      case 'e': return escape(args[i++]);\n      // no default\n    }\n  });\n\n  return div.firstChild;\n}\n\n/**\n * Check for suites that do not have elements\n * with `classname`, and hide them.\n *\n * @param {text} classname\n */\nfunction hideSuitesWithout (classname) {\n  var suites = document.getElementsByClassName('suite');\n  for (var i = 0; i < suites.length; i++) {\n    var els = suites[i].getElementsByClassName(classname);\n    if (!els.length) {\n      suites[i].className += ' hidden';\n    }\n  }\n}\n\n/**\n * Unhide .hidden suites.\n */\nfunction unhide () {\n  var els = document.getElementsByClassName('suite hidden');\n  for (var i = 0; i < els.length; ++i) {\n    els[i].className = els[i].className.replace('suite hidden', 'suite');\n  }\n}\n\n/**\n * Set an element's text contents.\n *\n * @param {HTMLElement} el\n * @param {string} contents\n */\nfunction text (el, contents) {\n  if (el.textContent) {\n    el.textContent = contents;\n  } else {\n    el.innerText = contents;\n  }\n}\n\n/**\n * Listen on `event` with callback `fn`.\n */\nfunction on (el, event, fn) {\n  if (el.addEventListener) {\n    el.addEventListener(event, fn, false);\n  } else {\n    el.attachEvent('on' + event, fn);\n  }\n}\n","\n\n/**\n * Expose `Progress`.\n */\n\nmodule.exports = Progress;\n\n/**\n * Initialize a new `Progress` indicator.\n */\nfunction Progress () {\n  this.percent = 0;\n  this.size(0);\n  this.fontSize(11);\n  this.font('helvetica, arial, sans-serif');\n}\n\n/**\n * Set progress size to `size`.\n *\n * @api public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\nProgress.prototype.size = function (size) {\n  this._size = size;\n  return this;\n};\n\n/**\n * Set text to `text`.\n *\n * @api public\n * @param {string} text\n * @return {Progress} Progress instance.\n */\nProgress.prototype.text = function (text) {\n  this._text = text;\n  return this;\n};\n\n/**\n * Set font size to `size`.\n *\n * @api public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\nProgress.prototype.fontSize = function (size) {\n  this._fontSize = size;\n  return this;\n};\n\n/**\n * Set font to `family`.\n *\n * @param {string} family\n * @return {Progress} Progress instance.\n */\nProgress.prototype.font = function (family) {\n  this._font = family;\n  return this;\n};\n\n/**\n * Update percentage to `n`.\n *\n * @param {number} n\n * @return {Progress} Progress instance.\n */\nProgress.prototype.update = function (n) {\n  this.percent = n;\n  return this;\n};\n\n/**\n * Draw on `ctx`.\n *\n * @param {CanvasRenderingContext2d} ctx\n * @return {Progress} Progress instance.\n */\nProgress.prototype.draw = function (ctx) {\n  try {\n    var percent = Math.min(this.percent, 100);\n    var size = this._size;\n    var half = size / 2;\n    var x = half;\n    var y = half;\n    var rad = half - 1;\n    var fontSize = this._fontSize;\n\n    ctx.font = fontSize + 'px ' + this._font;\n\n    var angle = Math.PI * 2 * (percent / 100);\n    ctx.clearRect(0, 0, size, size);\n\n    // outer circle\n    ctx.strokeStyle = '#9f9f9f';\n    ctx.beginPath();\n    ctx.arc(x, y, rad, 0, angle, false);\n    ctx.stroke();\n\n    // inner circle\n    ctx.strokeStyle = '#eee';\n    ctx.beginPath();\n    ctx.arc(x, y, rad - 1, 0, angle, true);\n    ctx.stroke();\n\n    // text\n    var text = this._text || (percent | 0) + '%';\n    var w = ctx.measureText(text).width;\n\n    ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);\n  } catch (err) {\n    // don't fail if we can't render progress\n  }\n  return this;\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\nvar cursor = Base.cursor;\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction List (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var n = 0;\n\n  runner.on('start', function () {\n    console.log();\n  });\n\n  runner.on('test', function (test) {\n    process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));\n  });\n\n  runner.on('pending', function (test) {\n    var fmt = color('checkmark', '  -') +\n      color('pending', ' %s');\n    console.log(fmt, test.fullTitle());\n  });\n\n  runner.on('pass', function (test) {\n    var fmt = color('checkmark', '  ' + Base.symbols.ok) +\n      color('pass', ' %s: ') +\n      color(test.speed, '%dms');\n    cursor.CR();\n    console.log(fmt, test.fullTitle(), test.duration);\n  });\n\n  runner.on('fail', function (test) {\n    cursor.CR();\n    console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());\n  });\n\n  runner.on('end', self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(List, Base);\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\n\n/**\n * Expose `Min`.\n */\n\nexports = module.exports = Min;\n\n/**\n * Initialize a new `Min` minimal test reporter (best used with --watch).\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Min (runner) {\n  Base.call(this, runner);\n\n  runner.on('start', function () {\n    // clear screen\n    process.stdout.write('\\u001b[2J');\n    // set cursor position\n    process.stdout.write('\\u001b[1;3H');\n  });\n\n  runner.on('end', this.epilogue.bind(this));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Min, Base);\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\n\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n\n/**\n * Initialize a new `Spec` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Spec (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var indents = 0;\n  var n = 0;\n\n  function indent () {\n    return Array(indents).join('  ');\n  }\n\n  runner.on('start', function () {\n    console.log();\n  });\n\n  runner.on('suite', function (suite) {\n    ++indents;\n    console.log(color('suite', '%s%s'), indent(), suite.title);\n  });\n\n  runner.on('suite end', function () {\n    --indents;\n    if (indents === 1) {\n      console.log();\n    }\n  });\n\n  runner.on('pending', function (test) {\n    var fmt = indent() + color('pending', '  - %s');\n    console.log(fmt, test.title);\n  });\n\n  runner.on('pass', function (test) {\n    var fmt;\n    if (test.speed === 'fast') {\n      fmt = indent() +\n        color('checkmark', '  ' + Base.symbols.ok) +\n        color('pass', ' %s');\n      console.log(fmt, test.title);\n    } else {\n      fmt = indent() +\n        color('checkmark', '  ' + Base.symbols.ok) +\n        color('pass', ' %s') +\n        color(test.speed, ' (%dms)');\n      console.log(fmt, test.title, test.duration);\n    }\n  });\n\n  runner.on('fail', function (test) {\n    console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n\n  runner.on('end', self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Spec, Base);\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = NyanCat;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction NyanCat (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * 0.75 | 0;\n  var nyanCatWidth = this.nyanCatWidth = 11;\n\n  this.colorIndex = 0;\n  this.numberOfLines = 4;\n  this.rainbowColors = self.generateColors();\n  this.scoreboardWidth = 5;\n  this.tick = 0;\n  this.trajectories = [[], [], [], []];\n  this.trajectoryWidthMax = (width - nyanCatWidth);\n\n  runner.on('start', function () {\n    Base.cursor.hide();\n    self.draw();\n  });\n\n  runner.on('pending', function () {\n    self.draw();\n  });\n\n  runner.on('pass', function () {\n    self.draw();\n  });\n\n  runner.on('fail', function () {\n    self.draw();\n  });\n\n  runner.on('end', function () {\n    Base.cursor.show();\n    for (var i = 0; i < self.numberOfLines; i++) {\n      write('\\n');\n    }\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(NyanCat, Base);\n\n/**\n * Draw the nyan cat\n *\n * @api private\n */\n\nNyanCat.prototype.draw = function () {\n  this.appendRainbow();\n  this.drawScoreboard();\n  this.drawRainbow();\n  this.drawNyanCat();\n  this.tick = !this.tick;\n};\n\n/**\n * Draw the \"scoreboard\" showing the number\n * of passes, failures and pending tests.\n *\n * @api private\n */\n\nNyanCat.prototype.drawScoreboard = function () {\n  var stats = this.stats;\n\n  function draw (type, n) {\n    write(' ');\n    write(Base.color(type, n));\n    write('\\n');\n  }\n\n  draw('green', stats.passes);\n  draw('fail', stats.failures);\n  draw('pending', stats.pending);\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Append the rainbow.\n *\n * @api private\n */\n\nNyanCat.prototype.appendRainbow = function () {\n  var segment = this.tick ? '_' : '-';\n  var rainbowified = this.rainbowify(segment);\n\n  for (var index = 0; index < this.numberOfLines; index++) {\n    var trajectory = this.trajectories[index];\n    if (trajectory.length >= this.trajectoryWidthMax) {\n      trajectory.shift();\n    }\n    trajectory.push(rainbowified);\n  }\n};\n\n/**\n * Draw the rainbow.\n *\n * @api private\n */\n\nNyanCat.prototype.drawRainbow = function () {\n  var self = this;\n\n  this.trajectories.forEach(function (line) {\n    write('\\u001b[' + self.scoreboardWidth + 'C');\n    write(line.join(''));\n    write('\\n');\n  });\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Draw the nyan cat\n *\n * @api private\n */\nNyanCat.prototype.drawNyanCat = function () {\n  var self = this;\n  var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n  var dist = '\\u001b[' + startWidth + 'C';\n  var padding = '';\n\n  write(dist);\n  write('_,------,');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? '  ' : '   ';\n  write('_|' + padding + '/\\\\_/\\\\ ');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? '_' : '__';\n  var tail = self.tick ? '~' : '^';\n  write(tail + '|' + padding + this.face() + ' ');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? ' ' : '  ';\n  write(padding + '\"\"  \"\" ');\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Draw nyan cat face.\n *\n * @api private\n * @return {string}\n */\n\nNyanCat.prototype.face = function () {\n  var stats = this.stats;\n  if (stats.failures) {\n    return '( x .x)';\n  } else if (stats.pending) {\n    return '( o .o)';\n  } else if (stats.passes) {\n    return '( ^ .^)';\n  }\n  return '( - .-)';\n};\n\n/**\n * Move cursor up `n`.\n *\n * @api private\n * @param {number} n\n */\n\nNyanCat.prototype.cursorUp = function (n) {\n  write('\\u001b[' + n + 'A');\n};\n\n/**\n * Move cursor down `n`.\n *\n * @api private\n * @param {number} n\n */\n\nNyanCat.prototype.cursorDown = function (n) {\n  write('\\u001b[' + n + 'B');\n};\n\n/**\n * Generate rainbow colors.\n *\n * @api private\n * @return {Array}\n */\nNyanCat.prototype.generateColors = function () {\n  var colors = [];\n\n  for (var i = 0; i < (6 * 7); i++) {\n    var pi3 = Math.floor(Math.PI / 3);\n    var n = (i * (1.0 / 6));\n    var r = Math.floor(3 * Math.sin(n) + 3);\n    var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n    var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n    colors.push(36 * r + 6 * g + b + 16);\n  }\n\n  return colors;\n};\n\n/**\n * Apply rainbow to the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nNyanCat.prototype.rainbowify = function (str) {\n  if (!Base.useColors) {\n    return str;\n  }\n  var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n  this.colorIndex += 1;\n  return '\\u001b[38;5;' + color + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Stdout helper.\n *\n * @param {string} string A message to write to stdout.\n */\nfunction write (string) {\n  process.stdout.write(string);\n}\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\nvar inherits = utils.inherits;\nvar fs = require('fs');\nvar escape = utils.escape;\nvar mkdirp = require('mkdirp');\nvar path = require('path');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Expose `XUnit`.\n */\n\nexports = module.exports = XUnit;\n\n/**\n * Initialize a new `XUnit` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction XUnit (runner, options) {\n  Base.call(this, runner);\n\n  var stats = this.stats;\n  var tests = [];\n  var self = this;\n\n  // the name of the test suite, as it will appear in the resulting XML file\n  var suiteName;\n\n  // the default name of the test suite if none is provided\n  var DEFAULT_SUITE_NAME = 'Mocha Tests';\n\n  if (options && options.reporterOptions) {\n    if (options.reporterOptions.output) {\n      if (!fs.createWriteStream) {\n        throw new Error('file output not supported in browser');\n      }\n\n      mkdirp.sync(path.dirname(options.reporterOptions.output));\n      self.fileStream = fs.createWriteStream(options.reporterOptions.output);\n    }\n\n    // get the suite name from the reporter options (if provided)\n    suiteName = options.reporterOptions.suiteName;\n  }\n\n  // fall back to the default suite name\n  suiteName = suiteName || DEFAULT_SUITE_NAME;\n\n  runner.on('pending', function (test) {\n    tests.push(test);\n  });\n\n  runner.on('pass', function (test) {\n    tests.push(test);\n  });\n\n  runner.on('fail', function (test) {\n    tests.push(test);\n  });\n\n  runner.on('end', function () {\n    self.write(tag('testsuite', {\n      name: suiteName,\n      tests: stats.tests,\n      failures: stats.failures,\n      errors: stats.failures,\n      skipped: stats.tests - stats.failures - stats.passes,\n      timestamp: (new Date()).toUTCString(),\n      time: (stats.duration / 1000) || 0\n    }, false));\n\n    tests.forEach(function (t) {\n      self.test(t);\n    });\n\n    self.write('</testsuite>');\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(XUnit, Base);\n\n/**\n * Override done to close the stream (if it's a file).\n *\n * @param failures\n * @param {Function} fn\n */\nXUnit.prototype.done = function (failures, fn) {\n  if (this.fileStream) {\n    this.fileStream.end(function () {\n      fn(failures);\n    });\n  } else {\n    fn(failures);\n  }\n};\n\n/**\n * Write out the given line.\n *\n * @param {string} line\n */\nXUnit.prototype.write = function (line) {\n  if (this.fileStream) {\n    this.fileStream.write(line + '\\n');\n  } else if (typeof process === 'object' && process.stdout) {\n    process.stdout.write(line + '\\n');\n  } else {\n    console.log(line);\n  }\n};\n\n/**\n * Output tag for the given `test.`\n *\n * @param {Test} test\n */\nXUnit.prototype.test = function (test) {\n  var attrs = {\n    classname: test.parent.fullTitle(),\n    name: test.title,\n    time: (test.duration / 1000) || 0\n  };\n\n  if (test.state === 'failed') {\n    var err = test.err;\n    this.write(tag('testcase', attrs, false, tag('failure', {}, false, escape(err.message) + '\\n' + escape(err.stack))));\n  } else if (test.isPending()) {\n    this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));\n  } else {\n    this.write(tag('testcase', attrs, true));\n  }\n};\n\n/**\n * HTML tag helper.\n *\n * @param name\n * @param attrs\n * @param close\n * @param content\n * @return {string}\n */\nfunction tag (name, attrs, close, content) {\n  var end = close ? '/>' : '>';\n  var pairs = [];\n  var tag;\n\n  for (var key in attrs) {\n    if (Object.prototype.hasOwnProperty.call(attrs, key)) {\n      pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n    }\n  }\n\n  tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n  if (content) {\n    tag += content + '</' + name + end;\n  }\n  return tag;\n}\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\n\n/**\n * Constants\n */\n\nvar SUITE_PREFIX = '$';\n\n/**\n * Expose `Markdown`.\n */\n\nexports = module.exports = Markdown;\n\n/**\n * Initialize a new `Markdown` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Markdown (runner) {\n  Base.call(this, runner);\n\n  var level = 0;\n  var buf = '';\n\n  function title (str) {\n    return Array(level).join('#') + ' ' + str;\n  }\n\n  function mapTOC (suite, obj) {\n    var ret = obj;\n    var key = SUITE_PREFIX + suite.title;\n\n    obj = obj[key] = obj[key] || { suite: suite };\n    suite.suites.forEach(function (suite) {\n      mapTOC(suite, obj);\n    });\n\n    return ret;\n  }\n\n  function stringifyTOC (obj, level) {\n    ++level;\n    var buf = '';\n    var link;\n    for (var key in obj) {\n      if (key === 'suite') {\n        continue;\n      }\n      if (key !== SUITE_PREFIX) {\n        link = ' - [' + key.substring(1) + ']';\n        link += '(#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n';\n        buf += Array(level).join('  ') + link;\n      }\n      buf += stringifyTOC(obj[key], level);\n    }\n    return buf;\n  }\n\n  function generateTOC (suite) {\n    var obj = mapTOC(suite, {});\n    return stringifyTOC(obj, 0);\n  }\n\n  generateTOC(runner.suite);\n\n  runner.on('suite', function (suite) {\n    ++level;\n    var slug = utils.slug(suite.fullTitle());\n    buf += '<a name=\"' + slug + '\"></a>' + '\\n';\n    buf += title(suite.title) + '\\n';\n  });\n\n  runner.on('suite end', function () {\n    --level;\n  });\n\n  runner.on('pass', function (test) {\n    var code = utils.clean(test.body);\n    buf += test.title + '.\\n';\n    buf += '\\n```js\\n';\n    buf += code + '\\n';\n    buf += '```\\n\\n';\n  });\n\n  runner.on('end', function () {\n    process.stdout.write('# TOC\\n');\n    process.stdout.write(generateTOC(runner.suite));\n    process.stdout.write(buf);\n  });\n}\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\nvar cursor = Base.cursor;\n\n/**\n * Expose `Progress`.\n */\n\nexports = module.exports = Progress;\n\n/**\n * General progress bar color.\n */\n\nBase.colors.progress = 90;\n\n/**\n * Initialize a new `Progress` bar test reporter.\n *\n * @api public\n * @param {Runner} runner\n * @param {Object} options\n */\nfunction Progress (runner, options) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * 0.50 | 0;\n  var total = runner.total;\n  var complete = 0;\n  var lastN = -1;\n\n  // default chars\n  options = options || {};\n  var reporterOptions = options.reporterOptions || {};\n\n  options.open = reporterOptions.open || '[';\n  options.complete = reporterOptions.complete || '▬';\n  options.incomplete = reporterOptions.incomplete || Base.symbols.dot;\n  options.close = reporterOptions.close || ']';\n  options.verbose = reporterOptions.verbose || false;\n\n  // tests started\n  runner.on('start', function () {\n    console.log();\n    cursor.hide();\n  });\n\n  // tests complete\n  runner.on('test end', function () {\n    complete++;\n\n    var percent = complete / total;\n    var n = width * percent | 0;\n    var i = width - n;\n\n    if (n === lastN && !options.verbose) {\n      // Don't re-render the line if it hasn't changed\n      return;\n    }\n    lastN = n;\n\n    cursor.CR();\n    process.stdout.write('\\u001b[J');\n    process.stdout.write(color('progress', '  ' + options.open));\n    process.stdout.write(Array(n).join(options.complete));\n    process.stdout.write(Array(i).join(options.incomplete));\n    process.stdout.write(color('progress', options.close));\n    if (options.verbose) {\n      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n    }\n  });\n\n  // tests are complete, output some stats\n  // and the failures if any\n  runner.on('end', function () {\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Progress, Base);\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar cursor = Base.cursor;\nvar color = Base.color;\n\n/**\n * Expose `Landing`.\n */\n\nexports = module.exports = Landing;\n\n/**\n * Airplane color.\n */\n\nBase.colors.plane = 0;\n\n/**\n * Airplane crash color.\n */\n\nBase.colors['plane crash'] = 31;\n\n/**\n * Runway color.\n */\n\nBase.colors.runway = 90;\n\n/**\n * Initialize a new `Landing` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Landing (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * 0.75 | 0;\n  var total = runner.total;\n  var stream = process.stdout;\n  var plane = color('plane', '✈');\n  var crashed = -1;\n  var n = 0;\n\n  function runway () {\n    var buf = Array(width).join('-');\n    return '  ' + color('runway', buf);\n  }\n\n  runner.on('start', function () {\n    stream.write('\\n\\n\\n  ');\n    cursor.hide();\n  });\n\n  runner.on('test end', function (test) {\n    // check if the plane crashed\n    var col = crashed === -1 ? width * ++n / total | 0 : crashed;\n\n    // show the crash\n    if (test.state === 'failed') {\n      plane = color('plane crash', '✈');\n      crashed = col;\n    }\n\n    // render landing strip\n    stream.write('\\u001b[' + (width + 1) + 'D\\u001b[2A');\n    stream.write(runway());\n    stream.write('\\n  ');\n    stream.write(color('runway', Array(col).join('⋅')));\n    stream.write(plane);\n    stream.write(color('runway', Array(width - col).join('⋅') + '\\n'));\n    stream.write(runway());\n    stream.write('\\u001b[0m');\n  });\n\n  runner.on('end', function () {\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Landing, Base);\n","\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction List (runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var total = runner.total;\n\n  runner.on('start', function () {\n    console.log(JSON.stringify(['start', { total: total }]));\n  });\n\n  runner.on('pass', function (test) {\n    console.log(JSON.stringify(['pass', clean(test)]));\n  });\n\n  runner.on('fail', function (test, err) {\n    test = clean(test);\n    test.err = err.message;\n    test.stack = err.stack || null;\n    console.log(JSON.stringify(['fail', test]));\n  });\n\n  runner.on('end', function () {\n    process.stdout.write(JSON.stringify(['end', self.stats]));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @api private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean (test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry()\n  };\n}\n","\n\nexports.bdd = require('./bdd');\nexports.tdd = require('./tdd');\nexports.qunit = require('./qunit');\nexports.exports = require('./exports');\n","\n\n/**\n * Module dependencies.\n */\n\nvar Test = require('../test');\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function() {\n *        describe('#indexOf()', function() {\n *          it('should return -1 when not present', function() {\n *            // ...\n *          });\n *\n *          it('should return the index when present', function() {\n *            // ...\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function (suite) {\n  var suites = [suite];\n\n  suite.on('pre-require', function (context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function (title, fn) {\n      return common.suite.create({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe = context.xcontext = context.describe.skip = function (title, fn) {\n      return common.suite.skip({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function (title, fn) {\n      return common.suite.only({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.it = context.specify = function (title, fn) {\n      var suite = suites[0];\n      if (suite.isPending()) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function (title, fn) {\n      return common.test.only(mocha, context.it(title, fn));\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit = context.xspecify = context.it.skip = function (title) {\n      return context.it(title);\n    };\n\n    /**\n     * Number of attempts to retry.\n     */\n    context.it.retries = function (n) {\n      context.retries(n);\n    };\n  });\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\nvar utils = require('./utils');\nvar isString = utils.isString;\n\n/**\n * Expose `Test`.\n */\n\nmodule.exports = Test;\n\n/**\n * Initialize a new `Test` with the given `title` and callback `fn`.\n *\n * @api private\n * @param {String} title\n * @param {Function} fn\n */\nfunction Test (title, fn) {\n  if (!isString(title)) {\n    throw new Error('Test `title` should be a \"string\" but \"' + typeof title + '\" was given instead.');\n  }\n  Runnable.call(this, title, fn);\n  this.pending = !fn;\n  this.type = 'test';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\nutils.inherits(Test, Runnable);\n\nTest.prototype.clone = function () {\n  var test = new Test(this.title, this.fn);\n  test.timeout(this.timeout());\n  test.slow(this.slow());\n  test.enableTimeouts(this.enableTimeouts());\n  test.retries(this.retries());\n  test.currentRetry(this.currentRetry());\n  test.globals(this.globals());\n  test.parent = this.parent;\n  test.file = this.file;\n  test.ctx = this.ctx;\n  return test;\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('./ms');\nvar utils = require('./utils');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Object#toString().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Expose `Runnable`.\n */\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n * @param {string} title\n * @param {Function} fn\n */\nfunction Runnable (title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this.timedOut = false;\n  this._trace = new Error('done() called multiple times');\n  this._retries = -1;\n  this._currentRetry = 0;\n  this.pending = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\nutils.inherits(Runnable, EventEmitter);\n\n/**\n * Set & get timeout `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  // see #1652 for reasoning\n  if (ms === 0 || ms > Math.pow(2, 31)) {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set or get slow `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function (ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set and get whether timeout is `enabled`.\n *\n * @api private\n * @param {boolean} enabled\n * @return {Runnable|boolean} enabled or Runnable instance.\n */\nRunnable.prototype.enableTimeouts = function (enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @api public\n */\nRunnable.prototype.skip = function () {\n  throw new Pending('sync skip');\n};\n\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @api private\n */\nRunnable.prototype.isPending = function () {\n  return this.pending || (this.parent && this.parent.isPending());\n};\n\n/**\n * Set or get number of retries.\n *\n * @api private\n */\nRunnable.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Set or get current retry\n *\n * @api private\n */\nRunnable.prototype.currentRetry = function (n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @api public\n * @return {string}\n */\nRunnable.prototype.titlePath = function () {\n  return this.parent.titlePath().concat([this.title]);\n};\n\n/**\n * Clear the timeout.\n *\n * @api private\n */\nRunnable.prototype.clearTimeout = function () {\n  clearTimeout(this.timer);\n};\n\n/**\n * Inspect the runnable void of private properties.\n *\n * @api private\n * @return {string}\n */\nRunnable.prototype.inspect = function () {\n  return JSON.stringify(this, function (key, val) {\n    if (key[0] === '_') {\n      return;\n    }\n    if (key === 'parent') {\n      return '#<Suite>';\n    }\n    if (key === 'ctx') {\n      return '#<Context>';\n    }\n    return val;\n  }, 2);\n};\n\n/**\n * Reset the timeout.\n *\n * @api private\n */\nRunnable.prototype.resetTimeout = function () {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function () {\n    if (!self._enableTimeouts) {\n      return;\n    }\n    self.callback(new Error('Timeout of ' + ms +\n      'ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.'));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @api private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function (globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\nRunnable.prototype.run = function (fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var emitted;\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple (err) {\n    if (emitted) {\n      return;\n    }\n    emitted = true;\n    self.emit('error', err || new Error('done() called multiple times; stacktrace may be inaccurate'));\n  }\n\n  // finished\n  function done (err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n    if (finished) {\n      return multiple(err || self._trace);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = new Error('Timeout of ' + ms +\n      'ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.');\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout()\n  this.callback = done;\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    // allows skip() to be used in an explicit async context\n    this.skip = function asyncSkip () {\n      done(new Pending('async skip call'));\n      // halt execution.  the Runnable will be marked pending\n      // by the previous call, and the uncaught handler will ignore\n      // the failure.\n      throw new Pending('async skip; aborting execution');\n    };\n\n    if (this.allowUncaught) {\n      return callFnAsync(this.fn);\n    }\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      emitted = true;\n      done(utils.getError(err));\n    }\n    return;\n  }\n\n  if (this.allowUncaught) {\n    if (this.isPending()) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    if (this.isPending()) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    emitted = true;\n    done(utils.getError(err));\n  }\n\n  function callFn (fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result\n        .then(function () {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function (reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync (fn) {\n    var result = fn.call(ctx, function (err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: ' +\n            JSON.stringify(err)));\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      if (result && utils.isPromise(result)) {\n        return done(new Error('Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'));\n      }\n\n      done();\n    });\n  }\n};\n","\n\n/**\n * Expose `Pending`.\n */\n\nmodule.exports = Pending;\n\n/**\n * Initialize a new `Pending` error with the given message.\n *\n * @param {string} message\n */\nfunction Pending (message) {\n  this.message = message;\n}\n","\n\nvar Suite = require('../suite');\n\n/**\n * Functions common to more than one interface.\n *\n * @param {Suite[]} suites\n * @param {Context} context\n * @param {Mocha} mocha\n * @return {Object} An object containing common functions.\n */\nmodule.exports = function (suites, context, mocha) {\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root suite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite (suite) {\n      return function run () {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function (name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function (name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function (name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function (name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n\n    suite: {\n      /**\n       * Create an exclusive Suite; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      only: function only (opts) {\n        opts.isOnly = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Create a Suite, but skip it; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      skip: function skip (opts) {\n        opts.pending = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Creates a suite.\n       * @param {Object} opts Options\n       * @param {string} opts.title Title of Suite\n       * @param {Function} [opts.fn] Suite Function (not always applicable)\n       * @param {boolean} [opts.pending] Is Suite pending?\n       * @param {string} [opts.file] Filepath where this Suite resides\n       * @param {boolean} [opts.isOnly] Is Suite exclusive?\n       * @returns {Suite}\n       */\n      create: function create (opts) {\n        var suite = Suite.create(suites[0], opts.title);\n        suite.pending = Boolean(opts.pending);\n        suite.file = opts.file;\n        suites.unshift(suite);\n        if (opts.isOnly) {\n          suite.parent._onlySuites = suite.parent._onlySuites.concat(suite);\n        }\n        if (typeof opts.fn === 'function') {\n          opts.fn.call(suite);\n          suites.shift();\n        } else if (typeof opts.fn === 'undefined' && !suite.pending) {\n          throw new Error('Suite \"' + suite.fullTitle() + '\" was defined but no callback was supplied. Supply a callback or explicitly skip the suite.');\n        }\n\n        return suite;\n      }\n    },\n\n    test: {\n\n      /**\n       * Exclusive test-case.\n       *\n       * @param {Object} mocha\n       * @param {Function} test\n       * @returns {*}\n       */\n      only: function (mocha, test) {\n        test.parent._onlyTests = test.parent._onlyTests.concat(test);\n        return test;\n      },\n\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function (title) {\n        context.test(title);\n      },\n\n      /**\n       * Number of retry attempts\n       *\n       * @param {number} n\n       */\n      retries: function (n) {\n        context.retries(n);\n      }\n    }\n  };\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Hook = require('./hook');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\nvar debug = require('debug')('mocha:suite');\nvar milliseconds = require('./ms');\n\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n\n/**\n * Create a new `Suite` with the given `title` and parent `Suite`. When a suite\n * with the same title is already present, that suite is returned to provide\n * nicer reporter and more flexible meta-testing.\n *\n * @api public\n * @param {Suite} parent\n * @param {string} title\n * @return {Suite}\n */\nexports.create = function (parent, title) {\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n\n/**\n * Initialize a new `Suite` with the given `title` and `ctx`.\n *\n * @api private\n * @param {string} title\n * @param {Context} parentContext\n */\nfunction Suite (title, parentContext) {\n  if (!utils.isString(title)) {\n    throw new Error('Suite `title` should be a \"string\" but \"' + typeof title + '\" was given instead.');\n  }\n  this.title = title;\n  function Context () {}\n  Context.prototype = parentContext;\n  this.ctx = new Context();\n  this.suites = [];\n  this.tests = [];\n  this.pending = false;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this.root = !title;\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this._retries = -1;\n  this._onlyTests = [];\n  this._onlySuites = [];\n  this.delayed = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Suite, EventEmitter);\n\n/**\n * Return a clone of this `Suite`.\n *\n * @api private\n * @return {Suite}\n */\nSuite.prototype.clone = function () {\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n\n/**\n * Set or get timeout `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms.toString() === '0') {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n\n/**\n * Set or get number of times to retry a failed test.\n *\n * @api private\n * @param {number|string} n\n * @return {Suite|number} for chaining\n */\nSuite.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  debug('retries %d', n);\n  this._retries = parseInt(n, 10) || 0;\n  return this;\n};\n\n/**\n  * Set or get timeout to `enabled`.\n  *\n  * @api private\n  * @param {boolean} enabled\n  * @return {Suite|boolean} self or enabled\n  */\nSuite.prototype.enableTimeouts = function (enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Set or get slow `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.slow = function (ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set or get whether to bail after first error.\n *\n * @api private\n * @param {boolean} bail\n * @return {Suite|number} for chaining\n */\nSuite.prototype.bail = function (bail) {\n  if (!arguments.length) {\n    return this._bail;\n  }\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n\n/**\n * Check if this suite or its parent suite is marked as pending.\n *\n * @api private\n */\nSuite.prototype.isPending = function () {\n  return this.pending || (this.parent && this.parent.isPending());\n};\n\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeAll = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeAll.push(hook);\n  this.emit('beforeAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterAll = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterAll.push(hook);\n  this.emit('afterAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeEach = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeEach.push(hook);\n  this.emit('beforeEach', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterEach = function (title, fn) {\n  if (this.isPending()) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterEach.push(hook);\n  this.emit('afterEach', hook);\n  return this;\n};\n\n/**\n * Add a test `suite`.\n *\n * @api private\n * @param {Suite} suite\n * @return {Suite} for chaining\n */\nSuite.prototype.addSuite = function (suite) {\n  suite.parent = this;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit('suite', suite);\n  return this;\n};\n\n/**\n * Add a `test` to this suite.\n *\n * @api private\n * @param {Test} test\n * @return {Suite} for chaining\n */\nSuite.prototype.addTest = function (test) {\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.retries(this.retries());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit('test', test);\n  return this;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nSuite.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by recursively concatenating the parent's\n * title path.\n *\n * @api public\n * @return {string}\n */\nSuite.prototype.titlePath = function () {\n  var result = [];\n  if (this.parent) {\n    result = result.concat(this.parent.titlePath());\n  }\n  if (!this.root) {\n    result.push(this.title);\n  }\n  return result;\n};\n\n/**\n * Return the total number of tests.\n *\n * @api public\n * @return {number}\n */\nSuite.prototype.total = function () {\n  return this.suites.reduce(function (sum, suite) {\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n};\n\n/**\n * Iterates through each suite recursively to find all tests. Applies a\n * function in the format `fn(test)`.\n *\n * @api private\n * @param {Function} fn\n * @return {Suite}\n */\nSuite.prototype.eachTest = function (fn) {\n  this.tests.forEach(fn);\n  this.suites.forEach(function (suite) {\n    suite.eachTest(fn);\n  });\n  return this;\n};\n\n/**\n * This will run the root suite if we happen to be running in delayed mode.\n */\nSuite.prototype.run = function run () {\n  if (this.root) {\n    this.emit('run');\n  }\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\nvar inherits = require('./utils').inherits;\n\n/**\n * Expose `Hook`.\n */\n\nmodule.exports = Hook;\n\n/**\n * Initialize a new `Hook` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\nfunction Hook (title, fn) {\n  Runnable.call(this, title, fn);\n  this.type = 'hook';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\ninherits(Hook, Runnable);\n\n/**\n * Get or set the test `err`.\n *\n * @param {Error} err\n * @return {Error}\n * @api public\n */\nHook.prototype.error = function (err) {\n  if (!arguments.length) {\n    err = this._error;\n    this._error = null;\n    return err;\n  }\n\n  this._error = err;\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar Test = require('../test');\n\n/**\n * TDD-style interface:\n *\n *      suite('Array', function() {\n *        suite('#indexOf()', function() {\n *          suiteSetup(function() {\n *\n *          });\n *\n *          test('should return -1 when not present', function() {\n *\n *          });\n *\n *          test('should return the index when present', function() {\n *\n *          });\n *\n *          suiteTeardown(function() {\n *\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function (suite) {\n  var suites = [suite];\n\n  suite.on('pre-require', function (context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n\n    context.setup = common.beforeEach;\n    context.teardown = common.afterEach;\n    context.suiteSetup = common.before;\n    context.suiteTeardown = common.after;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n\n    /**\n     * Describe a \"suite\" with the given `title` and callback `fn` containing\n     * nested suites and/or tests.\n     */\n    context.suite = function (title, fn) {\n      return common.suite.create({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Pending suite.\n     */\n    context.suite.skip = function (title, fn) {\n      return common.suite.skip({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n    context.suite.only = function (title, fn) {\n      return common.suite.only({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Describe a specification or test-case with the given `title` and\n     * callback `fn` acting as a thunk.\n     */\n    context.test = function (title, fn) {\n      var suite = suites[0];\n      if (suite.isPending()) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.test.only = function (title, fn) {\n      return common.test.only(mocha, context.test(title, fn));\n    };\n\n    context.test.skip = common.test.skip;\n    context.test.retries = common.test.retries;\n  });\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar Test = require('../test');\n\n/**\n * QUnit-style interface:\n *\n *     suite('Array');\n *\n *     test('#length', function() {\n *       var arr = [1,2,3];\n *       ok(arr.length == 3);\n *     });\n *\n *     test('#indexOf()', function() {\n *       var arr = [1,2,3];\n *       ok(arr.indexOf(1) == 0);\n *       ok(arr.indexOf(2) == 1);\n *       ok(arr.indexOf(3) == 2);\n *     });\n *\n *     suite('String');\n *\n *     test('#length', function() {\n *       ok('foo'.length == 3);\n *     });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function (suite) {\n  var suites = [suite];\n\n  suite.on('pre-require', function (context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`.\n     */\n\n    context.suite = function (title) {\n      if (suites.length > 1) {\n        suites.shift();\n      }\n      return common.suite.create({\n        title: title,\n        file: file,\n        fn: false\n      });\n    };\n\n    /**\n     * Exclusive Suite.\n     */\n\n    context.suite.only = function (title) {\n      if (suites.length > 1) {\n        suites.shift();\n      }\n      return common.suite.only({\n        title: title,\n        file: file,\n        fn: false\n      });\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.test = function (title, fn) {\n      var test = new Test(title, fn);\n      test.file = file;\n      suites[0].addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.test.only = function (title, fn) {\n      return common.test.only(mocha, context.test(title, fn));\n    };\n\n    context.test.skip = common.test.skip;\n    context.test.retries = common.test.retries;\n  });\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite');\nvar Test = require('../test');\n\n/**\n * Exports-style (as Node.js module) interface:\n *\n *     exports.Array = {\n *       '#indexOf()': {\n *         'should return -1 when the value is not present': function() {\n *\n *         },\n *\n *         'should return the correct index when the value is present': function() {\n *\n *         }\n *       }\n *     };\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function (suite) {\n  var suites = [suite];\n\n  suite.on('require', visit);\n\n  function visit (obj, file) {\n    var suite;\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        var fn = obj[key];\n        switch (key) {\n          case 'before':\n            suites[0].beforeAll(fn);\n            break;\n          case 'after':\n            suites[0].afterAll(fn);\n            break;\n          case 'beforeEach':\n            suites[0].beforeEach(fn);\n            break;\n          case 'afterEach':\n            suites[0].afterEach(fn);\n            break;\n          default:\n            var test = new Test(key, fn);\n            test.file = file;\n            suites[0].addTest(test);\n        }\n      } else {\n        suite = Suite.create(suites[0], key);\n        suites.unshift(suite);\n        visit(obj[key], file);\n        suites.shift();\n      }\n    }\n  }\n};\n","\n\n/**\n * Expose `Context`.\n */\n\nmodule.exports = Context;\n\n/**\n * Initialize a new `Context`.\n *\n * @api private\n */\nfunction Context () {}\n\n/**\n * Set or get the context `Runnable` to `runnable`.\n *\n * @api private\n * @param {Runnable} runnable\n * @return {Context}\n */\nContext.prototype.runnable = function (runnable) {\n  if (!arguments.length) {\n    return this._runnable;\n  }\n  this.test = this._runnable = runnable;\n  return this;\n};\n\n/**\n * Set or get test timeout `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {Context} self\n */\nContext.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this.runnable().timeout();\n  }\n  this.runnable().timeout(ms);\n  return this;\n};\n\n/**\n * Set test timeout `enabled`.\n *\n * @api private\n * @param {boolean} enabled\n * @return {Context} self\n */\nContext.prototype.enableTimeouts = function (enabled) {\n  if (!arguments.length) {\n    return this.runnable().enableTimeouts();\n  }\n  this.runnable().enableTimeouts(enabled);\n  return this;\n};\n\n/**\n * Set or get test slowness threshold `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {Context} self\n */\nContext.prototype.slow = function (ms) {\n  if (!arguments.length) {\n    return this.runnable().slow();\n  }\n  this.runnable().slow(ms);\n  return this;\n};\n\n/**\n * Mark a test as skipped.\n *\n * @api private\n * @throws Pending\n */\nContext.prototype.skip = function () {\n  this.runnable().skip();\n};\n\n/**\n * Set or get a number of allowed retries on failed tests\n *\n * @api private\n * @param {number} n\n * @return {Context} self\n */\nContext.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this.runnable().retries();\n  }\n  this.runnable().retries(n);\n  return this;\n};\n","\n\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\nvar debug = require('debug')('mocha:runner');\nvar Runnable = require('./runnable');\nvar stackFilter = utils.stackTraceFilter();\nvar stringify = utils.stringify;\nvar type = utils.type;\nvar undefinedError = utils.undefinedError;\n\n/**\n * Non-enumerable globals.\n */\n\nvar globals = [\n  'setTimeout',\n  'clearTimeout',\n  'setInterval',\n  'clearInterval',\n  'XMLHttpRequest',\n  'Date',\n  'setImmediate',\n  'clearImmediate'\n];\n\n/**\n * Expose `Runner`.\n */\n\nmodule.exports = Runner;\n\n/**\n * Initialize a `Runner` for the given `suite`.\n *\n * Events:\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n *\n * @api public\n * @param {Suite} suite Root suite\n * @param {boolean} [delay] Whether or not to delay execution of root suite\n * until ready.\n */\nfunction Runner (suite, delay) {\n  var self = this;\n  this._globals = [];\n  this._abort = false;\n  this._delay = delay;\n  this.suite = suite;\n  this.started = false;\n  this.total = suite.total();\n  this.failures = 0;\n  this.on('test end', function (test) {\n    self.checkGlobals(test);\n  });\n  this.on('hook end', function (hook) {\n    self.checkGlobals(hook);\n  });\n  this._defaultGrep = /.*/;\n  this.grep(this._defaultGrep);\n  this.globals(this.globalProps().concat(extraGlobals()));\n}\n\n/**\n * Wrapper for setImmediate, process.nextTick, or browser polyfill.\n *\n * @param {Function} fn\n * @api private\n */\nRunner.immediately = global.setImmediate || process.nextTick;\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Runner, EventEmitter);\n\n/**\n * Run tests with full titles matching `re`. Updates runner.total\n * with number of tests matched.\n *\n * @param {RegExp} re\n * @param {Boolean} invert\n * @return {Runner} for chaining\n * @api public\n * @param {RegExp} re\n * @param {boolean} invert\n * @return {Runner} Runner instance.\n */\nRunner.prototype.grep = function (re, invert) {\n  debug('grep %s', re);\n  this._grep = re;\n  this._invert = invert;\n  this.total = this.grepTotal(this.suite);\n  return this;\n};\n\n/**\n * Returns the number of tests matching the grep search for the\n * given suite.\n *\n * @param {Suite} suite\n * @return {Number}\n * @api public\n * @param {Suite} suite\n * @return {number}\n */\nRunner.prototype.grepTotal = function (suite) {\n  var self = this;\n  var total = 0;\n\n  suite.eachTest(function (test) {\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) {\n      match = !match;\n    }\n    if (match) {\n      total++;\n    }\n  });\n\n  return total;\n};\n\n/**\n * Return a list of global properties.\n *\n * @return {Array}\n * @api private\n */\nRunner.prototype.globalProps = function () {\n  var props = Object.keys(global);\n\n  // non-enumerables\n  for (var i = 0; i < globals.length; ++i) {\n    if (~props.indexOf(globals[i])) {\n      continue;\n    }\n    props.push(globals[i]);\n  }\n\n  return props;\n};\n\n/**\n * Allow the given `arr` of globals.\n *\n * @param {Array} arr\n * @return {Runner} for chaining\n * @api public\n * @param {Array} arr\n * @return {Runner} Runner instance.\n */\nRunner.prototype.globals = function (arr) {\n  if (!arguments.length) {\n    return this._globals;\n  }\n  debug('globals %j', arr);\n  this._globals = this._globals.concat(arr);\n  return this;\n};\n\n/**\n * Check for global variable leaks.\n *\n * @api private\n */\nRunner.prototype.checkGlobals = function (test) {\n  if (this.ignoreLeaks) {\n    return;\n  }\n  var ok = this._globals;\n\n  var globals = this.globalProps();\n  var leaks;\n\n  if (test) {\n    ok = ok.concat(test._allowedGlobals || []);\n  }\n\n  if (this.prevGlobalsLength === globals.length) {\n    return;\n  }\n  this.prevGlobalsLength = globals.length;\n\n  leaks = filterLeaks(ok, globals);\n  this._globals = this._globals.concat(leaks);\n\n  if (leaks.length > 1) {\n    this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));\n  } else if (leaks.length) {\n    this.fail(test, new Error('global leak detected: ' + leaks[0]));\n  }\n};\n\n/**\n * Fail the given `test`.\n *\n * @api private\n * @param {Test} test\n * @param {Error} err\n */\nRunner.prototype.fail = function (test, err) {\n  if (test.isPending()) {\n    return;\n  }\n\n  ++this.failures;\n  test.state = 'failed';\n\n  if (!(err instanceof Error || (err && typeof err.message === 'string'))) {\n    err = new Error('the ' + type(err) + ' ' + stringify(err) + ' was thrown, throw an Error :)');\n  }\n\n  try {\n    err.stack = (this.fullStackTrace || !err.stack)\n      ? err.stack\n      : stackFilter(err.stack);\n  } catch (ignored) {\n    // some environments do not take kindly to monkeying with the stack\n  }\n\n  this.emit('fail', test, err);\n};\n\n/**\n * Fail the given `hook` with `err`.\n *\n * Hook failures work in the following pattern:\n * - If bail, then exit\n * - Failed `before` hook skips all tests in a suite and subsuites,\n *   but jumps to corresponding `after` hook\n * - Failed `before each` hook skips remaining tests in a\n *   suite and jumps to corresponding `after each` hook,\n *   which is run only once\n * - Failed `after` hook does not alter\n *   execution order\n * - Failed `after each` hook skips remaining tests in a\n *   suite and subsuites, but executes other `after each`\n *   hooks\n *\n * @api private\n * @param {Hook} hook\n * @param {Error} err\n */\nRunner.prototype.failHook = function (hook, err) {\n  if (hook.ctx && hook.ctx.currentTest) {\n    hook.originalTitle = hook.originalTitle || hook.title;\n    hook.title = hook.originalTitle + ' for \"' + hook.ctx.currentTest.title + '\"';\n  }\n\n  this.fail(hook, err);\n  if (this.suite.bail()) {\n    this.emit('end');\n  }\n};\n\n/**\n * Run hook `name` callbacks and then invoke `fn()`.\n *\n * @api private\n * @param {string} name\n * @param {Function} fn\n */\n\nRunner.prototype.hook = function (name, fn) {\n  var suite = this.suite;\n  var hooks = suite['_' + name];\n  var self = this;\n\n  function next (i) {\n    var hook = hooks[i];\n    if (!hook) {\n      return fn();\n    }\n    self.currentRunnable = hook;\n\n    hook.ctx.currentTest = self.test;\n\n    self.emit('hook', hook);\n\n    if (!hook.listeners('error').length) {\n      hook.on('error', function (err) {\n        self.failHook(hook, err);\n      });\n    }\n\n    hook.run(function (err) {\n      var testError = hook.error();\n      if (testError) {\n        self.fail(self.test, testError);\n      }\n      if (err) {\n        if (err instanceof Pending) {\n          if (name === 'beforeEach' || name === 'afterEach') {\n            self.test.pending = true;\n          } else {\n            suite.tests.forEach(function (test) {\n              test.pending = true;\n            });\n            // a pending hook won't be executed twice.\n            hook.pending = true;\n          }\n        } else {\n          self.failHook(hook, err);\n\n          // stop executing hooks, notify callee of hook err\n          return fn(err);\n        }\n      }\n      self.emit('hook end', hook);\n      delete hook.ctx.currentTest;\n      next(++i);\n    });\n  }\n\n  Runner.immediately(function () {\n    next(0);\n  });\n};\n\n/**\n * Run hook `name` for the given array of `suites`\n * in order, and callback `fn(err, errSuite)`.\n *\n * @api private\n * @param {string} name\n * @param {Array} suites\n * @param {Function} fn\n */\nRunner.prototype.hooks = function (name, suites, fn) {\n  var self = this;\n  var orig = this.suite;\n\n  function next (suite) {\n    self.suite = suite;\n\n    if (!suite) {\n      self.suite = orig;\n      return fn();\n    }\n\n    self.hook(name, function (err) {\n      if (err) {\n        var errSuite = self.suite;\n        self.suite = orig;\n        return fn(err, errSuite);\n      }\n\n      next(suites.pop());\n    });\n  }\n\n  next(suites.pop());\n};\n\n/**\n * Run hooks from the top level down.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\nRunner.prototype.hookUp = function (name, fn) {\n  var suites = [this.suite].concat(this.parents()).reverse();\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Run hooks from the bottom up.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\nRunner.prototype.hookDown = function (name, fn) {\n  var suites = [this.suite].concat(this.parents());\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Return an array of parent Suites from\n * closest to furthest.\n *\n * @return {Array}\n * @api private\n */\nRunner.prototype.parents = function () {\n  var suite = this.suite;\n  var suites = [];\n  while (suite.parent) {\n    suite = suite.parent;\n    suites.push(suite);\n  }\n  return suites;\n};\n\n/**\n * Run the current test and callback `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\nRunner.prototype.runTest = function (fn) {\n  var self = this;\n  var test = this.test;\n\n  if (!test) {\n    return;\n  }\n  if (this.forbidOnly && hasOnly(this.parents().reverse()[0] || this.suite)) {\n    fn(new Error('`.only` forbidden'));\n    return;\n  }\n  if (this.asyncOnly) {\n    test.asyncOnly = true;\n  }\n  test.on('error', function (err) {\n    self.fail(test, err);\n  });\n  if (this.allowUncaught) {\n    test.allowUncaught = true;\n    return test.run(fn);\n  }\n  try {\n    test.run(fn);\n  } catch (err) {\n    fn(err);\n  }\n};\n\n/**\n * Run tests in the given `suite` and invoke the callback `fn()` when complete.\n *\n * @api private\n * @param {Suite} suite\n * @param {Function} fn\n */\nRunner.prototype.runTests = function (suite, fn) {\n  var self = this;\n  var tests = suite.tests.slice();\n  var test;\n\n  function hookErr (_, errSuite, after) {\n    // before/after Each hook for errSuite failed:\n    var orig = self.suite;\n\n    // for failed 'after each' hook start from errSuite parent,\n    // otherwise start from errSuite itself\n    self.suite = after ? errSuite.parent : errSuite;\n\n    if (self.suite) {\n      // call hookUp afterEach\n      self.hookUp('afterEach', function (err2, errSuite2) {\n        self.suite = orig;\n        // some hooks may fail even now\n        if (err2) {\n          return hookErr(err2, errSuite2, true);\n        }\n        // report error suite\n        fn(errSuite);\n      });\n    } else {\n      // there is no need calling other 'after each' hooks\n      self.suite = orig;\n      fn(errSuite);\n    }\n  }\n\n  function next (err, errSuite) {\n    // if we bail after first err\n    if (self.failures && suite._bail) {\n      return fn();\n    }\n\n    if (self._abort) {\n      return fn();\n    }\n\n    if (err) {\n      return hookErr(err, errSuite, true);\n    }\n\n    // next test\n    test = tests.shift();\n\n    // all done\n    if (!test) {\n      return fn();\n    }\n\n    // grep\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) {\n      match = !match;\n    }\n    if (!match) {\n      // Run immediately only if we have defined a grep. When we\n      // define a grep — It can cause maximum callstack error if\n      // the grep is doing a large recursive loop by neglecting\n      // all tests. The run immediately function also comes with\n      // a performance cost. So we don't want to run immediately\n      // if we run the whole test suite, because running the whole\n      // test suite don't do any immediate recursive loops. Thus,\n      // allowing a JS runtime to breathe.\n      if (self._grep !== self._defaultGrep) {\n        Runner.immediately(next);\n      } else {\n        next();\n      }\n      return;\n    }\n\n    if (test.isPending()) {\n      if (self.forbidPending) {\n        test.isPending = alwaysFalse;\n        self.fail(test, new Error('Pending test forbidden'));\n        delete test.isPending;\n      } else {\n        self.emit('pending', test);\n      }\n      self.emit('test end', test);\n      return next();\n    }\n\n    // execute test and hook(s)\n    self.emit('test', self.test = test);\n    self.hookDown('beforeEach', function (err, errSuite) {\n      if (test.isPending()) {\n        if (self.forbidPending) {\n          test.isPending = alwaysFalse;\n          self.fail(test, new Error('Pending test forbidden'));\n          delete test.isPending;\n        } else {\n          self.emit('pending', test);\n        }\n        self.emit('test end', test);\n        return next();\n      }\n      if (err) {\n        return hookErr(err, errSuite, false);\n      }\n      self.currentRunnable = self.test;\n      self.runTest(function (err) {\n        test = self.test;\n        if (err) {\n          var retry = test.currentRetry();\n          if (err instanceof Pending && self.forbidPending) {\n            self.fail(test, new Error('Pending test forbidden'));\n          } else if (err instanceof Pending) {\n            test.pending = true;\n            self.emit('pending', test);\n          } else if (retry < test.retries()) {\n            var clonedTest = test.clone();\n            clonedTest.currentRetry(retry + 1);\n            tests.unshift(clonedTest);\n\n            // Early return + hook trigger so that it doesn't\n            // increment the count wrong\n            return self.hookUp('afterEach', next);\n          } else {\n            self.fail(test, err);\n          }\n          self.emit('test end', test);\n\n          if (err instanceof Pending) {\n            return next();\n          }\n\n          return self.hookUp('afterEach', next);\n        }\n\n        test.state = 'passed';\n        self.emit('pass', test);\n        self.emit('test end', test);\n        self.hookUp('afterEach', next);\n      });\n    });\n  }\n\n  this.next = next;\n  this.hookErr = hookErr;\n  next();\n};\n\nfunction alwaysFalse () {\n  return false;\n}\n\n/**\n * Run the given `suite` and invoke the callback `fn()` when complete.\n *\n * @api private\n * @param {Suite} suite\n * @param {Function} fn\n */\nRunner.prototype.runSuite = function (suite, fn) {\n  var i = 0;\n  var self = this;\n  var total = this.grepTotal(suite);\n  var afterAllHookCalled = false;\n\n  debug('run suite %s', suite.fullTitle());\n\n  if (!total || (self.failures && suite._bail)) {\n    return fn();\n  }\n\n  this.emit('suite', this.suite = suite);\n\n  function next (errSuite) {\n    if (errSuite) {\n      // current suite failed on a hook from errSuite\n      if (errSuite === suite) {\n        // if errSuite is current suite\n        // continue to the next sibling suite\n        return done();\n      }\n      // errSuite is among the parents of current suite\n      // stop execution of errSuite and all sub-suites\n      return done(errSuite);\n    }\n\n    if (self._abort) {\n      return done();\n    }\n\n    var curr = suite.suites[i++];\n    if (!curr) {\n      return done();\n    }\n\n    // Avoid grep neglecting large number of tests causing a\n    // huge recursive loop and thus a maximum call stack error.\n    // See comment in `this.runTests()` for more information.\n    if (self._grep !== self._defaultGrep) {\n      Runner.immediately(function () {\n        self.runSuite(curr, next);\n      });\n    } else {\n      self.runSuite(curr, next);\n    }\n  }\n\n  function done (errSuite) {\n    self.suite = suite;\n    self.nextSuite = next;\n\n    if (afterAllHookCalled) {\n      fn(errSuite);\n    } else {\n      // mark that the afterAll block has been called once\n      // and so can be skipped if there is an error in it.\n      afterAllHookCalled = true;\n\n      // remove reference to test\n      delete self.test;\n\n      self.hook('afterAll', function () {\n        self.emit('suite end', suite);\n        fn(errSuite);\n      });\n    }\n  }\n\n  this.nextSuite = next;\n\n  this.hook('beforeAll', function (err) {\n    if (err) {\n      return done();\n    }\n    self.runTests(suite, next);\n  });\n};\n\n/**\n * Handle uncaught exceptions.\n *\n * @param {Error} err\n * @api private\n */\nRunner.prototype.uncaught = function (err) {\n  if (err) {\n    debug('uncaught exception %s', err === (function () {\n      return this;\n    }.call(err)) ? (err.message || err) : err);\n  } else {\n    debug('uncaught undefined exception');\n    err = undefinedError();\n  }\n  err.uncaught = true;\n\n  var runnable = this.currentRunnable;\n\n  if (!runnable) {\n    runnable = new Runnable('Uncaught error outside test suite');\n    runnable.parent = this.suite;\n\n    if (this.started) {\n      this.fail(runnable, err);\n    } else {\n      // Can't recover from this failure\n      this.emit('start');\n      this.fail(runnable, err);\n      this.emit('end');\n    }\n\n    return;\n  }\n\n  runnable.clearTimeout();\n\n  // Ignore errors if complete or pending\n  if (runnable.state || runnable.isPending()) {\n    return;\n  }\n  this.fail(runnable, err);\n\n  // recover from test\n  if (runnable.type === 'test') {\n    this.emit('test end', runnable);\n    this.hookUp('afterEach', this.next);\n    return;\n  }\n\n  // recover from hooks\n  if (runnable.type === 'hook') {\n    var errSuite = this.suite;\n    // if hook failure is in afterEach block\n    if (runnable.fullTitle().indexOf('after each') > -1) {\n      return this.hookErr(err, errSuite, true);\n    }\n    // if hook failure is in beforeEach block\n    if (runnable.fullTitle().indexOf('before each') > -1) {\n      return this.hookErr(err, errSuite, false);\n    }\n    // if hook failure is in after or before blocks\n    return this.nextSuite(errSuite);\n  }\n\n  // bail\n  this.emit('end');\n};\n\n/**\n * Cleans up the references to all the deferred functions\n * (before/after/beforeEach/afterEach) and tests of a Suite.\n * These must be deleted otherwise a memory leak can happen,\n * as those functions may reference variables from closures,\n * thus those variables can never be garbage collected as long\n * as the deferred functions exist.\n *\n * @param {Suite} suite\n */\nfunction cleanSuiteReferences (suite) {\n  function cleanArrReferences (arr) {\n    for (var i = 0; i < arr.length; i++) {\n      delete arr[i].fn;\n    }\n  }\n\n  if (Array.isArray(suite._beforeAll)) {\n    cleanArrReferences(suite._beforeAll);\n  }\n\n  if (Array.isArray(suite._beforeEach)) {\n    cleanArrReferences(suite._beforeEach);\n  }\n\n  if (Array.isArray(suite._afterAll)) {\n    cleanArrReferences(suite._afterAll);\n  }\n\n  if (Array.isArray(suite._afterEach)) {\n    cleanArrReferences(suite._afterEach);\n  }\n\n  for (var i = 0; i < suite.tests.length; i++) {\n    delete suite.tests[i].fn;\n  }\n}\n\n/**\n * Run the root suite and invoke `fn(failures)`\n * on completion.\n *\n * @param {Function} fn\n * @return {Runner} for chaining\n * @api public\n * @param {Function} fn\n * @return {Runner} Runner instance.\n */\nRunner.prototype.run = function (fn) {\n  var self = this;\n  var rootSuite = this.suite;\n\n  // If there is an `only` filter\n  if (hasOnly(rootSuite)) {\n    filterOnly(rootSuite);\n  }\n\n  fn = fn || function () {};\n\n  function uncaught (err) {\n    self.uncaught(err);\n  }\n\n  function start () {\n    self.started = true;\n    self.emit('start');\n    self.runSuite(rootSuite, function () {\n      debug('finished running');\n      self.emit('end');\n    });\n  }\n\n  debug('start');\n\n  // references cleanup to avoid memory leaks\n  this.on('suite end', cleanSuiteReferences);\n\n  // callback\n  this.on('end', function () {\n    debug('end');\n    process.removeListener('uncaughtException', uncaught);\n    fn(self.failures);\n  });\n\n  // uncaught exception\n  process.on('uncaughtException', uncaught);\n\n  if (this._delay) {\n    // for reporters, I guess.\n    // might be nice to debounce some dots while we wait.\n    this.emit('waiting', rootSuite);\n    rootSuite.once('run', start);\n  } else {\n    start();\n  }\n\n  return this;\n};\n\n/**\n * Cleanly abort execution.\n *\n * @api public\n * @return {Runner} Runner instance.\n */\nRunner.prototype.abort = function () {\n  debug('aborting');\n  this._abort = true;\n\n  return this;\n};\n\n/**\n * Filter suites based on `isOnly` logic.\n *\n * @param {Array} suite\n * @returns {Boolean}\n * @api private\n */\nfunction filterOnly (suite) {\n  if (suite._onlyTests.length) {\n    // If the suite contains `only` tests, run those and ignore any nested suites.\n    suite.tests = suite._onlyTests;\n    suite.suites = [];\n  } else {\n    // Otherwise, do not run any of the tests in this suite.\n    suite.tests = [];\n    suite._onlySuites.forEach(function (onlySuite) {\n      // If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.\n      // Otherwise, all of the tests on this `only` suite should be run, so don't filter it.\n      if (hasOnly(onlySuite)) {\n        filterOnly(onlySuite);\n      }\n    });\n    // Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.\n    suite.suites = suite.suites.filter(function (childSuite) {\n      return suite._onlySuites.indexOf(childSuite) !== -1 || filterOnly(childSuite);\n    });\n  }\n  // Keep the suite only if there is something to run\n  return suite.tests.length || suite.suites.length;\n}\n\n/**\n * Determines whether a suite has an `only` test or suite as a descendant.\n *\n * @param {Array} suite\n * @returns {Boolean}\n * @api private\n */\nfunction hasOnly (suite) {\n  return suite._onlyTests.length || suite._onlySuites.length || suite.suites.some(hasOnly);\n}\n\n/**\n * Filter leaks with the given globals flagged as `ok`.\n *\n * @api private\n * @param {Array} ok\n * @param {Array} globals\n * @return {Array}\n */\nfunction filterLeaks (ok, globals) {\n  return globals.filter(function (key) {\n    // Firefox and Chrome exposes iframes as index inside the window object\n    if (/^\\d+/.test(key)) {\n      return false;\n    }\n\n    // in firefox\n    // if runner runs in an iframe, this iframe's window.getInterface method\n    // not init at first it is assigned in some seconds\n    if (global.navigator && (/^getInterface/).test(key)) {\n      return false;\n    }\n\n    // an iframe could be approached by window[iframeIndex]\n    // in ie6,7,8 and opera, iframeIndex is enumerable, this could cause leak\n    if (global.navigator && (/^\\d+/).test(key)) {\n      return false;\n    }\n\n    // Opera and IE expose global variables for HTML element IDs (issue #243)\n    if (/^mocha-/.test(key)) {\n      return false;\n    }\n\n    var matched = ok.filter(function (ok) {\n      if (~ok.indexOf('*')) {\n        return key.indexOf(ok.split('*')[0]) === 0;\n      }\n      return key === ok;\n    });\n    return !matched.length && (!global.navigator || key !== 'onerror');\n  });\n}\n\n/**\n * Array of globals dependent on the environment.\n *\n * @return {Array}\n * @api private\n */\nfunction extraGlobals () {\n  if (typeof process === 'object' && typeof process.version === 'string') {\n    var parts = process.version.split('.');\n    var nodeVersion = parts.reduce(function (a, v) {\n      return a << 8 | v;\n    });\n\n    // 'errno' was renamed to process._errno in v0.9.11.\n\n    if (nodeVersion < 0x00090B) {\n      return ['errno'];\n    }\n  }\n\n  return [];\n}\n"]}